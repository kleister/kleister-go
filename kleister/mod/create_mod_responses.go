// Code generated by go-swagger; DO NOT EDIT.

package mod

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/kleister/kleister-go/v1/models"
)

// CreateModReader is a Reader for the CreateMod structure.
type CreateModReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateModReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateModOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewCreateModForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewCreateModUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewCreateModDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCreateModOK creates a CreateModOK with default headers values
func NewCreateModOK() *CreateModOK {
	return &CreateModOK{}
}

/*
CreateModOK describes a response with status code 200, with default header values.

The created mod data
*/
type CreateModOK struct {
	Payload *models.Mod
}

// IsSuccess returns true when this create mod o k response has a 2xx status code
func (o *CreateModOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create mod o k response has a 3xx status code
func (o *CreateModOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create mod o k response has a 4xx status code
func (o *CreateModOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create mod o k response has a 5xx status code
func (o *CreateModOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create mod o k response a status code equal to that given
func (o *CreateModOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create mod o k response
func (o *CreateModOK) Code() int {
	return 200
}

func (o *CreateModOK) Error() string {
	return fmt.Sprintf("[POST /mods][%d] createModOK  %+v", 200, o.Payload)
}

func (o *CreateModOK) String() string {
	return fmt.Sprintf("[POST /mods][%d] createModOK  %+v", 200, o.Payload)
}

func (o *CreateModOK) GetPayload() *models.Mod {
	return o.Payload
}

func (o *CreateModOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Mod)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateModForbidden creates a CreateModForbidden with default headers values
func NewCreateModForbidden() *CreateModForbidden {
	return &CreateModForbidden{}
}

/*
CreateModForbidden describes a response with status code 403, with default header values.

User is not authorized
*/
type CreateModForbidden struct {
	Payload *models.GeneralError
}

// IsSuccess returns true when this create mod forbidden response has a 2xx status code
func (o *CreateModForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create mod forbidden response has a 3xx status code
func (o *CreateModForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create mod forbidden response has a 4xx status code
func (o *CreateModForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create mod forbidden response has a 5xx status code
func (o *CreateModForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create mod forbidden response a status code equal to that given
func (o *CreateModForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the create mod forbidden response
func (o *CreateModForbidden) Code() int {
	return 403
}

func (o *CreateModForbidden) Error() string {
	return fmt.Sprintf("[POST /mods][%d] createModForbidden  %+v", 403, o.Payload)
}

func (o *CreateModForbidden) String() string {
	return fmt.Sprintf("[POST /mods][%d] createModForbidden  %+v", 403, o.Payload)
}

func (o *CreateModForbidden) GetPayload() *models.GeneralError {
	return o.Payload
}

func (o *CreateModForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GeneralError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateModUnprocessableEntity creates a CreateModUnprocessableEntity with default headers values
func NewCreateModUnprocessableEntity() *CreateModUnprocessableEntity {
	return &CreateModUnprocessableEntity{}
}

/*
CreateModUnprocessableEntity describes a response with status code 422, with default header values.

Failed to validate request
*/
type CreateModUnprocessableEntity struct {
	Payload *models.ValidationError
}

// IsSuccess returns true when this create mod unprocessable entity response has a 2xx status code
func (o *CreateModUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create mod unprocessable entity response has a 3xx status code
func (o *CreateModUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create mod unprocessable entity response has a 4xx status code
func (o *CreateModUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this create mod unprocessable entity response has a 5xx status code
func (o *CreateModUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this create mod unprocessable entity response a status code equal to that given
func (o *CreateModUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the create mod unprocessable entity response
func (o *CreateModUnprocessableEntity) Code() int {
	return 422
}

func (o *CreateModUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /mods][%d] createModUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *CreateModUnprocessableEntity) String() string {
	return fmt.Sprintf("[POST /mods][%d] createModUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *CreateModUnprocessableEntity) GetPayload() *models.ValidationError {
	return o.Payload
}

func (o *CreateModUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateModDefault creates a CreateModDefault with default headers values
func NewCreateModDefault(code int) *CreateModDefault {
	return &CreateModDefault{
		_statusCode: code,
	}
}

/*
CreateModDefault describes a response with status code -1, with default header values.

Some error unrelated to the handler
*/
type CreateModDefault struct {
	_statusCode int

	Payload *models.GeneralError
}

// IsSuccess returns true when this create mod default response has a 2xx status code
func (o *CreateModDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this create mod default response has a 3xx status code
func (o *CreateModDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this create mod default response has a 4xx status code
func (o *CreateModDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this create mod default response has a 5xx status code
func (o *CreateModDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this create mod default response a status code equal to that given
func (o *CreateModDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the create mod default response
func (o *CreateModDefault) Code() int {
	return o._statusCode
}

func (o *CreateModDefault) Error() string {
	return fmt.Sprintf("[POST /mods][%d] CreateMod default  %+v", o._statusCode, o.Payload)
}

func (o *CreateModDefault) String() string {
	return fmt.Sprintf("[POST /mods][%d] CreateMod default  %+v", o._statusCode, o.Payload)
}

func (o *CreateModDefault) GetPayload() *models.GeneralError {
	return o.Payload
}

func (o *CreateModDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GeneralError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
