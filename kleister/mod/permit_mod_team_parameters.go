// Code generated by go-swagger; DO NOT EDIT.

package mod

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/kleister/kleister-go/models"
)

// NewPermitModTeamParams creates a new PermitModTeamParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPermitModTeamParams() *PermitModTeamParams {
	return &PermitModTeamParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPermitModTeamParamsWithTimeout creates a new PermitModTeamParams object
// with the ability to set a timeout on a request.
func NewPermitModTeamParamsWithTimeout(timeout time.Duration) *PermitModTeamParams {
	return &PermitModTeamParams{
		timeout: timeout,
	}
}

// NewPermitModTeamParamsWithContext creates a new PermitModTeamParams object
// with the ability to set a context for a request.
func NewPermitModTeamParamsWithContext(ctx context.Context) *PermitModTeamParams {
	return &PermitModTeamParams{
		Context: ctx,
	}
}

// NewPermitModTeamParamsWithHTTPClient creates a new PermitModTeamParams object
// with the ability to set a custom HTTPClient for a request.
func NewPermitModTeamParamsWithHTTPClient(client *http.Client) *PermitModTeamParams {
	return &PermitModTeamParams{
		HTTPClient: client,
	}
}

/*
PermitModTeamParams contains all the parameters to send to the API endpoint

	for the permit mod team operation.

	Typically these are written to a http.Request.
*/
type PermitModTeamParams struct {

	/* ModID.

	   A mod UUID or slug
	*/
	ModID string

	/* ModTeam.

	   The mod team data to update
	*/
	ModTeam *models.ModTeamParams

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the permit mod team params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PermitModTeamParams) WithDefaults() *PermitModTeamParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the permit mod team params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PermitModTeamParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the permit mod team params
func (o *PermitModTeamParams) WithTimeout(timeout time.Duration) *PermitModTeamParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the permit mod team params
func (o *PermitModTeamParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the permit mod team params
func (o *PermitModTeamParams) WithContext(ctx context.Context) *PermitModTeamParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the permit mod team params
func (o *PermitModTeamParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the permit mod team params
func (o *PermitModTeamParams) WithHTTPClient(client *http.Client) *PermitModTeamParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the permit mod team params
func (o *PermitModTeamParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithModID adds the modID to the permit mod team params
func (o *PermitModTeamParams) WithModID(modID string) *PermitModTeamParams {
	o.SetModID(modID)
	return o
}

// SetModID adds the modId to the permit mod team params
func (o *PermitModTeamParams) SetModID(modID string) {
	o.ModID = modID
}

// WithModTeam adds the modTeam to the permit mod team params
func (o *PermitModTeamParams) WithModTeam(modTeam *models.ModTeamParams) *PermitModTeamParams {
	o.SetModTeam(modTeam)
	return o
}

// SetModTeam adds the modTeam to the permit mod team params
func (o *PermitModTeamParams) SetModTeam(modTeam *models.ModTeamParams) {
	o.ModTeam = modTeam
}

// WriteToRequest writes these params to a swagger request
func (o *PermitModTeamParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param mod_id
	if err := r.SetPathParam("mod_id", o.ModID); err != nil {
		return err
	}
	if o.ModTeam != nil {
		if err := r.SetBodyParam(o.ModTeam); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
