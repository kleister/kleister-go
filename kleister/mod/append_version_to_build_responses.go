// Code generated by go-swagger; DO NOT EDIT.

package mod

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/kleister/kleister-go/models"
)

// AppendVersionToBuildReader is a Reader for the AppendVersionToBuild structure.
type AppendVersionToBuildReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AppendVersionToBuildReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewAppendVersionToBuildOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 403:
		result := NewAppendVersionToBuildForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 412:
		result := NewAppendVersionToBuildPreconditionFailed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 422:
		result := NewAppendVersionToBuildUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewAppendVersionToBuildDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewAppendVersionToBuildOK creates a AppendVersionToBuildOK with default headers values
func NewAppendVersionToBuildOK() *AppendVersionToBuildOK {
	return &AppendVersionToBuildOK{}
}

/*AppendVersionToBuildOK handles this case with default header values.

Plain success message
*/
type AppendVersionToBuildOK struct {
	Payload *models.GeneralError
}

func (o *AppendVersionToBuildOK) Error() string {
	return fmt.Sprintf("[POST /mods/{mod_id}/versions/{version_id}/builds][%d] appendVersionToBuildOK  %+v", 200, o.Payload)
}

func (o *AppendVersionToBuildOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GeneralError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAppendVersionToBuildForbidden creates a AppendVersionToBuildForbidden with default headers values
func NewAppendVersionToBuildForbidden() *AppendVersionToBuildForbidden {
	return &AppendVersionToBuildForbidden{}
}

/*AppendVersionToBuildForbidden handles this case with default header values.

User is not authorized
*/
type AppendVersionToBuildForbidden struct {
	Payload *models.GeneralError
}

func (o *AppendVersionToBuildForbidden) Error() string {
	return fmt.Sprintf("[POST /mods/{mod_id}/versions/{version_id}/builds][%d] appendVersionToBuildForbidden  %+v", 403, o.Payload)
}

func (o *AppendVersionToBuildForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GeneralError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAppendVersionToBuildPreconditionFailed creates a AppendVersionToBuildPreconditionFailed with default headers values
func NewAppendVersionToBuildPreconditionFailed() *AppendVersionToBuildPreconditionFailed {
	return &AppendVersionToBuildPreconditionFailed{}
}

/*AppendVersionToBuildPreconditionFailed handles this case with default header values.

Failed to parse request body
*/
type AppendVersionToBuildPreconditionFailed struct {
	Payload *models.GeneralError
}

func (o *AppendVersionToBuildPreconditionFailed) Error() string {
	return fmt.Sprintf("[POST /mods/{mod_id}/versions/{version_id}/builds][%d] appendVersionToBuildPreconditionFailed  %+v", 412, o.Payload)
}

func (o *AppendVersionToBuildPreconditionFailed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GeneralError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAppendVersionToBuildUnprocessableEntity creates a AppendVersionToBuildUnprocessableEntity with default headers values
func NewAppendVersionToBuildUnprocessableEntity() *AppendVersionToBuildUnprocessableEntity {
	return &AppendVersionToBuildUnprocessableEntity{}
}

/*AppendVersionToBuildUnprocessableEntity handles this case with default header values.

Build is already appended
*/
type AppendVersionToBuildUnprocessableEntity struct {
	Payload *models.ValidationError
}

func (o *AppendVersionToBuildUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /mods/{mod_id}/versions/{version_id}/builds][%d] appendVersionToBuildUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *AppendVersionToBuildUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAppendVersionToBuildDefault creates a AppendVersionToBuildDefault with default headers values
func NewAppendVersionToBuildDefault(code int) *AppendVersionToBuildDefault {
	return &AppendVersionToBuildDefault{
		_statusCode: code,
	}
}

/*AppendVersionToBuildDefault handles this case with default header values.

Some error unrelated to the handler
*/
type AppendVersionToBuildDefault struct {
	_statusCode int

	Payload *models.GeneralError
}

// Code gets the status code for the append version to build default response
func (o *AppendVersionToBuildDefault) Code() int {
	return o._statusCode
}

func (o *AppendVersionToBuildDefault) Error() string {
	return fmt.Sprintf("[POST /mods/{mod_id}/versions/{version_id}/builds][%d] AppendVersionToBuild default  %+v", o._statusCode, o.Payload)
}

func (o *AppendVersionToBuildDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GeneralError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
