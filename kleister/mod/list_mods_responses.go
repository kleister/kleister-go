// Code generated by go-swagger; DO NOT EDIT.

package mod

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/kleister/kleister-go/models"
)

// ListModsReader is a Reader for the ListMods structure.
type ListModsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListModsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListModsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewListModsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewListModsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListModsOK creates a ListModsOK with default headers values
func NewListModsOK() *ListModsOK {
	return &ListModsOK{}
}

/*
ListModsOK describes a response with status code 200, with default header values.

A collection of mods
*/
type ListModsOK struct {
	Payload *models.Mods
}

// IsSuccess returns true when this list mods o k response has a 2xx status code
func (o *ListModsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list mods o k response has a 3xx status code
func (o *ListModsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list mods o k response has a 4xx status code
func (o *ListModsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list mods o k response has a 5xx status code
func (o *ListModsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list mods o k response a status code equal to that given
func (o *ListModsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list mods o k response
func (o *ListModsOK) Code() int {
	return 200
}

func (o *ListModsOK) Error() string {
	return fmt.Sprintf("[GET /mods][%d] listModsOK  %+v", 200, o.Payload)
}

func (o *ListModsOK) String() string {
	return fmt.Sprintf("[GET /mods][%d] listModsOK  %+v", 200, o.Payload)
}

func (o *ListModsOK) GetPayload() *models.Mods {
	return o.Payload
}

func (o *ListModsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Mods)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListModsForbidden creates a ListModsForbidden with default headers values
func NewListModsForbidden() *ListModsForbidden {
	return &ListModsForbidden{}
}

/*
ListModsForbidden describes a response with status code 403, with default header values.

User is not authorized
*/
type ListModsForbidden struct {
	Payload *models.GeneralError
}

// IsSuccess returns true when this list mods forbidden response has a 2xx status code
func (o *ListModsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list mods forbidden response has a 3xx status code
func (o *ListModsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list mods forbidden response has a 4xx status code
func (o *ListModsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list mods forbidden response has a 5xx status code
func (o *ListModsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list mods forbidden response a status code equal to that given
func (o *ListModsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the list mods forbidden response
func (o *ListModsForbidden) Code() int {
	return 403
}

func (o *ListModsForbidden) Error() string {
	return fmt.Sprintf("[GET /mods][%d] listModsForbidden  %+v", 403, o.Payload)
}

func (o *ListModsForbidden) String() string {
	return fmt.Sprintf("[GET /mods][%d] listModsForbidden  %+v", 403, o.Payload)
}

func (o *ListModsForbidden) GetPayload() *models.GeneralError {
	return o.Payload
}

func (o *ListModsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GeneralError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListModsDefault creates a ListModsDefault with default headers values
func NewListModsDefault(code int) *ListModsDefault {
	return &ListModsDefault{
		_statusCode: code,
	}
}

/*
ListModsDefault describes a response with status code -1, with default header values.

Some error unrelated to the handler
*/
type ListModsDefault struct {
	_statusCode int

	Payload *models.GeneralError
}

// IsSuccess returns true when this list mods default response has a 2xx status code
func (o *ListModsDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this list mods default response has a 3xx status code
func (o *ListModsDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this list mods default response has a 4xx status code
func (o *ListModsDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this list mods default response has a 5xx status code
func (o *ListModsDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this list mods default response a status code equal to that given
func (o *ListModsDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the list mods default response
func (o *ListModsDefault) Code() int {
	return o._statusCode
}

func (o *ListModsDefault) Error() string {
	return fmt.Sprintf("[GET /mods][%d] ListMods default  %+v", o._statusCode, o.Payload)
}

func (o *ListModsDefault) String() string {
	return fmt.Sprintf("[GET /mods][%d] ListMods default  %+v", o._statusCode, o.Payload)
}

func (o *ListModsDefault) GetPayload() *models.GeneralError {
	return o.Payload
}

func (o *ListModsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GeneralError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
