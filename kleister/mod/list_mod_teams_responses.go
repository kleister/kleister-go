// Code generated by go-swagger; DO NOT EDIT.

package mod

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/kleister/kleister-go/models"
)

// ListModTeamsReader is a Reader for the ListModTeams structure.
type ListModTeamsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListModTeamsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewListModTeamsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 403:
		result := NewListModTeamsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewListModTeamsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListModTeamsOK creates a ListModTeamsOK with default headers values
func NewListModTeamsOK() *ListModTeamsOK {
	return &ListModTeamsOK{}
}

/*ListModTeamsOK handles this case with default header values.

A collection of mod teams
*/
type ListModTeamsOK struct {
	Payload []*models.TeamMod
}

func (o *ListModTeamsOK) Error() string {
	return fmt.Sprintf("[GET /mods/{mod_id}/teams][%d] listModTeamsOK  %+v", 200, o.Payload)
}

func (o *ListModTeamsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListModTeamsForbidden creates a ListModTeamsForbidden with default headers values
func NewListModTeamsForbidden() *ListModTeamsForbidden {
	return &ListModTeamsForbidden{}
}

/*ListModTeamsForbidden handles this case with default header values.

User is not authorized
*/
type ListModTeamsForbidden struct {
	Payload *models.GeneralError
}

func (o *ListModTeamsForbidden) Error() string {
	return fmt.Sprintf("[GET /mods/{mod_id}/teams][%d] listModTeamsForbidden  %+v", 403, o.Payload)
}

func (o *ListModTeamsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GeneralError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListModTeamsDefault creates a ListModTeamsDefault with default headers values
func NewListModTeamsDefault(code int) *ListModTeamsDefault {
	return &ListModTeamsDefault{
		_statusCode: code,
	}
}

/*ListModTeamsDefault handles this case with default header values.

Some error unrelated to the handler
*/
type ListModTeamsDefault struct {
	_statusCode int

	Payload *models.GeneralError
}

// Code gets the status code for the list mod teams default response
func (o *ListModTeamsDefault) Code() int {
	return o._statusCode
}

func (o *ListModTeamsDefault) Error() string {
	return fmt.Sprintf("[GET /mods/{mod_id}/teams][%d] ListModTeams default  %+v", o._statusCode, o.Payload)
}

func (o *ListModTeamsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GeneralError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
