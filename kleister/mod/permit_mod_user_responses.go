// Code generated by go-swagger; DO NOT EDIT.

package mod

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/kleister/kleister-go/models"
)

// PermitModUserReader is a Reader for the PermitModUser structure.
type PermitModUserReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PermitModUserReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPermitModUserOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 403:
		result := NewPermitModUserForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 412:
		result := NewPermitModUserPreconditionFailed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 422:
		result := NewPermitModUserUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewPermitModUserDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPermitModUserOK creates a PermitModUserOK with default headers values
func NewPermitModUserOK() *PermitModUserOK {
	return &PermitModUserOK{}
}

/*PermitModUserOK handles this case with default header values.

Plain success message
*/
type PermitModUserOK struct {
	Payload *models.GeneralError
}

func (o *PermitModUserOK) Error() string {
	return fmt.Sprintf("[PUT /mods/{mod_id}/users][%d] permitModUserOK  %+v", 200, o.Payload)
}

func (o *PermitModUserOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GeneralError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPermitModUserForbidden creates a PermitModUserForbidden with default headers values
func NewPermitModUserForbidden() *PermitModUserForbidden {
	return &PermitModUserForbidden{}
}

/*PermitModUserForbidden handles this case with default header values.

User is not authorized
*/
type PermitModUserForbidden struct {
	Payload *models.GeneralError
}

func (o *PermitModUserForbidden) Error() string {
	return fmt.Sprintf("[PUT /mods/{mod_id}/users][%d] permitModUserForbidden  %+v", 403, o.Payload)
}

func (o *PermitModUserForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GeneralError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPermitModUserPreconditionFailed creates a PermitModUserPreconditionFailed with default headers values
func NewPermitModUserPreconditionFailed() *PermitModUserPreconditionFailed {
	return &PermitModUserPreconditionFailed{}
}

/*PermitModUserPreconditionFailed handles this case with default header values.

Failed to parse request body
*/
type PermitModUserPreconditionFailed struct {
	Payload *models.GeneralError
}

func (o *PermitModUserPreconditionFailed) Error() string {
	return fmt.Sprintf("[PUT /mods/{mod_id}/users][%d] permitModUserPreconditionFailed  %+v", 412, o.Payload)
}

func (o *PermitModUserPreconditionFailed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GeneralError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPermitModUserUnprocessableEntity creates a PermitModUserUnprocessableEntity with default headers values
func NewPermitModUserUnprocessableEntity() *PermitModUserUnprocessableEntity {
	return &PermitModUserUnprocessableEntity{}
}

/*PermitModUserUnprocessableEntity handles this case with default header values.

User is not assigned
*/
type PermitModUserUnprocessableEntity struct {
	Payload *models.GeneralError
}

func (o *PermitModUserUnprocessableEntity) Error() string {
	return fmt.Sprintf("[PUT /mods/{mod_id}/users][%d] permitModUserUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *PermitModUserUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GeneralError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPermitModUserDefault creates a PermitModUserDefault with default headers values
func NewPermitModUserDefault(code int) *PermitModUserDefault {
	return &PermitModUserDefault{
		_statusCode: code,
	}
}

/*PermitModUserDefault handles this case with default header values.

Some error unrelated to the handler
*/
type PermitModUserDefault struct {
	_statusCode int

	Payload *models.GeneralError
}

// Code gets the status code for the permit mod user default response
func (o *PermitModUserDefault) Code() int {
	return o._statusCode
}

func (o *PermitModUserDefault) Error() string {
	return fmt.Sprintf("[PUT /mods/{mod_id}/users][%d] PermitModUser default  %+v", o._statusCode, o.Payload)
}

func (o *PermitModUserDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GeneralError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
