// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/kleister/kleister-go/v1/models"
)

// DeleteUserFromPackReader is a Reader for the DeleteUserFromPack structure.
type DeleteUserFromPackReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteUserFromPackReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteUserFromPackOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewDeleteUserFromPackForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 412:
		result := NewDeleteUserFromPackPreconditionFailed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewDeleteUserFromPackUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewDeleteUserFromPackDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteUserFromPackOK creates a DeleteUserFromPackOK with default headers values
func NewDeleteUserFromPackOK() *DeleteUserFromPackOK {
	return &DeleteUserFromPackOK{}
}

/* DeleteUserFromPackOK describes a response with status code 200, with default header values.

Plain success message
*/
type DeleteUserFromPackOK struct {
	Payload *models.GeneralError
}

func (o *DeleteUserFromPackOK) Error() string {
	return fmt.Sprintf("[DELETE /users/{user_id}/packs][%d] deleteUserFromPackOK  %+v", 200, o.Payload)
}
func (o *DeleteUserFromPackOK) GetPayload() *models.GeneralError {
	return o.Payload
}

func (o *DeleteUserFromPackOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GeneralError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteUserFromPackForbidden creates a DeleteUserFromPackForbidden with default headers values
func NewDeleteUserFromPackForbidden() *DeleteUserFromPackForbidden {
	return &DeleteUserFromPackForbidden{}
}

/* DeleteUserFromPackForbidden describes a response with status code 403, with default header values.

User is not authorized
*/
type DeleteUserFromPackForbidden struct {
	Payload *models.GeneralError
}

func (o *DeleteUserFromPackForbidden) Error() string {
	return fmt.Sprintf("[DELETE /users/{user_id}/packs][%d] deleteUserFromPackForbidden  %+v", 403, o.Payload)
}
func (o *DeleteUserFromPackForbidden) GetPayload() *models.GeneralError {
	return o.Payload
}

func (o *DeleteUserFromPackForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GeneralError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteUserFromPackPreconditionFailed creates a DeleteUserFromPackPreconditionFailed with default headers values
func NewDeleteUserFromPackPreconditionFailed() *DeleteUserFromPackPreconditionFailed {
	return &DeleteUserFromPackPreconditionFailed{}
}

/* DeleteUserFromPackPreconditionFailed describes a response with status code 412, with default header values.

Failed to parse request body
*/
type DeleteUserFromPackPreconditionFailed struct {
	Payload *models.GeneralError
}

func (o *DeleteUserFromPackPreconditionFailed) Error() string {
	return fmt.Sprintf("[DELETE /users/{user_id}/packs][%d] deleteUserFromPackPreconditionFailed  %+v", 412, o.Payload)
}
func (o *DeleteUserFromPackPreconditionFailed) GetPayload() *models.GeneralError {
	return o.Payload
}

func (o *DeleteUserFromPackPreconditionFailed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GeneralError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteUserFromPackUnprocessableEntity creates a DeleteUserFromPackUnprocessableEntity with default headers values
func NewDeleteUserFromPackUnprocessableEntity() *DeleteUserFromPackUnprocessableEntity {
	return &DeleteUserFromPackUnprocessableEntity{}
}

/* DeleteUserFromPackUnprocessableEntity describes a response with status code 422, with default header values.

Pack is not assigned
*/
type DeleteUserFromPackUnprocessableEntity struct {
	Payload *models.GeneralError
}

func (o *DeleteUserFromPackUnprocessableEntity) Error() string {
	return fmt.Sprintf("[DELETE /users/{user_id}/packs][%d] deleteUserFromPackUnprocessableEntity  %+v", 422, o.Payload)
}
func (o *DeleteUserFromPackUnprocessableEntity) GetPayload() *models.GeneralError {
	return o.Payload
}

func (o *DeleteUserFromPackUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GeneralError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteUserFromPackDefault creates a DeleteUserFromPackDefault with default headers values
func NewDeleteUserFromPackDefault(code int) *DeleteUserFromPackDefault {
	return &DeleteUserFromPackDefault{
		_statusCode: code,
	}
}

/* DeleteUserFromPackDefault describes a response with status code -1, with default header values.

Some error unrelated to the handler
*/
type DeleteUserFromPackDefault struct {
	_statusCode int

	Payload *models.GeneralError
}

// Code gets the status code for the delete user from pack default response
func (o *DeleteUserFromPackDefault) Code() int {
	return o._statusCode
}

func (o *DeleteUserFromPackDefault) Error() string {
	return fmt.Sprintf("[DELETE /users/{user_id}/packs][%d] DeleteUserFromPack default  %+v", o._statusCode, o.Payload)
}
func (o *DeleteUserFromPackDefault) GetPayload() *models.GeneralError {
	return o.Payload
}

func (o *DeleteUserFromPackDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GeneralError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
