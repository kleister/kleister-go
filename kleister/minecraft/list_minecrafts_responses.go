// Code generated by go-swagger; DO NOT EDIT.

package minecraft

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/kleister/kleister-go/v1/models"
)

// ListMinecraftsReader is a Reader for the ListMinecrafts structure.
type ListMinecraftsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListMinecraftsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListMinecraftsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewListMinecraftsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewListMinecraftsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListMinecraftsOK creates a ListMinecraftsOK with default headers values
func NewListMinecraftsOK() *ListMinecraftsOK {
	return &ListMinecraftsOK{}
}

/*
ListMinecraftsOK describes a response with status code 200, with default header values.

A collection of Minecraft versions
*/
type ListMinecraftsOK struct {
	Payload *models.Minecrafts
}

// IsSuccess returns true when this list minecrafts o k response has a 2xx status code
func (o *ListMinecraftsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list minecrafts o k response has a 3xx status code
func (o *ListMinecraftsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list minecrafts o k response has a 4xx status code
func (o *ListMinecraftsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list minecrafts o k response has a 5xx status code
func (o *ListMinecraftsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list minecrafts o k response a status code equal to that given
func (o *ListMinecraftsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list minecrafts o k response
func (o *ListMinecraftsOK) Code() int {
	return 200
}

func (o *ListMinecraftsOK) Error() string {
	return fmt.Sprintf("[GET /minecraft][%d] listMinecraftsOK  %+v", 200, o.Payload)
}

func (o *ListMinecraftsOK) String() string {
	return fmt.Sprintf("[GET /minecraft][%d] listMinecraftsOK  %+v", 200, o.Payload)
}

func (o *ListMinecraftsOK) GetPayload() *models.Minecrafts {
	return o.Payload
}

func (o *ListMinecraftsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Minecrafts)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListMinecraftsForbidden creates a ListMinecraftsForbidden with default headers values
func NewListMinecraftsForbidden() *ListMinecraftsForbidden {
	return &ListMinecraftsForbidden{}
}

/*
ListMinecraftsForbidden describes a response with status code 403, with default header values.

User is not authorized
*/
type ListMinecraftsForbidden struct {
	Payload *models.GeneralError
}

// IsSuccess returns true when this list minecrafts forbidden response has a 2xx status code
func (o *ListMinecraftsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list minecrafts forbidden response has a 3xx status code
func (o *ListMinecraftsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list minecrafts forbidden response has a 4xx status code
func (o *ListMinecraftsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list minecrafts forbidden response has a 5xx status code
func (o *ListMinecraftsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list minecrafts forbidden response a status code equal to that given
func (o *ListMinecraftsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the list minecrafts forbidden response
func (o *ListMinecraftsForbidden) Code() int {
	return 403
}

func (o *ListMinecraftsForbidden) Error() string {
	return fmt.Sprintf("[GET /minecraft][%d] listMinecraftsForbidden  %+v", 403, o.Payload)
}

func (o *ListMinecraftsForbidden) String() string {
	return fmt.Sprintf("[GET /minecraft][%d] listMinecraftsForbidden  %+v", 403, o.Payload)
}

func (o *ListMinecraftsForbidden) GetPayload() *models.GeneralError {
	return o.Payload
}

func (o *ListMinecraftsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GeneralError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListMinecraftsDefault creates a ListMinecraftsDefault with default headers values
func NewListMinecraftsDefault(code int) *ListMinecraftsDefault {
	return &ListMinecraftsDefault{
		_statusCode: code,
	}
}

/*
ListMinecraftsDefault describes a response with status code -1, with default header values.

Some error unrelated to the handler
*/
type ListMinecraftsDefault struct {
	_statusCode int

	Payload *models.GeneralError
}

// IsSuccess returns true when this list minecrafts default response has a 2xx status code
func (o *ListMinecraftsDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this list minecrafts default response has a 3xx status code
func (o *ListMinecraftsDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this list minecrafts default response has a 4xx status code
func (o *ListMinecraftsDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this list minecrafts default response has a 5xx status code
func (o *ListMinecraftsDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this list minecrafts default response a status code equal to that given
func (o *ListMinecraftsDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the list minecrafts default response
func (o *ListMinecraftsDefault) Code() int {
	return o._statusCode
}

func (o *ListMinecraftsDefault) Error() string {
	return fmt.Sprintf("[GET /minecraft][%d] ListMinecrafts default  %+v", o._statusCode, o.Payload)
}

func (o *ListMinecraftsDefault) String() string {
	return fmt.Sprintf("[GET /minecraft][%d] ListMinecrafts default  %+v", o._statusCode, o.Payload)
}

func (o *ListMinecraftsDefault) GetPayload() *models.GeneralError {
	return o.Payload
}

func (o *ListMinecraftsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GeneralError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
