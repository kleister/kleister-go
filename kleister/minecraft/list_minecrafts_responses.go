// Code generated by go-swagger; DO NOT EDIT.

package minecraft

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/kleister/kleister-go/models"
)

// ListMinecraftsReader is a Reader for the ListMinecrafts structure.
type ListMinecraftsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListMinecraftsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewListMinecraftsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 403:
		result := NewListMinecraftsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewListMinecraftsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListMinecraftsOK creates a ListMinecraftsOK with default headers values
func NewListMinecraftsOK() *ListMinecraftsOK {
	return &ListMinecraftsOK{}
}

/*ListMinecraftsOK handles this case with default header values.

A collection of Minecraft versions
*/
type ListMinecraftsOK struct {
	Payload []*models.Minecraft
}

func (o *ListMinecraftsOK) Error() string {
	return fmt.Sprintf("[GET /minecraft][%d] listMinecraftsOK  %+v", 200, o.Payload)
}

func (o *ListMinecraftsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListMinecraftsForbidden creates a ListMinecraftsForbidden with default headers values
func NewListMinecraftsForbidden() *ListMinecraftsForbidden {
	return &ListMinecraftsForbidden{}
}

/*ListMinecraftsForbidden handles this case with default header values.

User is not authorized
*/
type ListMinecraftsForbidden struct {
	Payload *models.GeneralError
}

func (o *ListMinecraftsForbidden) Error() string {
	return fmt.Sprintf("[GET /minecraft][%d] listMinecraftsForbidden  %+v", 403, o.Payload)
}

func (o *ListMinecraftsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GeneralError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListMinecraftsDefault creates a ListMinecraftsDefault with default headers values
func NewListMinecraftsDefault(code int) *ListMinecraftsDefault {
	return &ListMinecraftsDefault{
		_statusCode: code,
	}
}

/*ListMinecraftsDefault handles this case with default header values.

Some error unrelated to the handler
*/
type ListMinecraftsDefault struct {
	_statusCode int

	Payload *models.GeneralError
}

// Code gets the status code for the list minecrafts default response
func (o *ListMinecraftsDefault) Code() int {
	return o._statusCode
}

func (o *ListMinecraftsDefault) Error() string {
	return fmt.Sprintf("[GET /minecraft][%d] ListMinecrafts default  %+v", o._statusCode, o.Payload)
}

func (o *ListMinecraftsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GeneralError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
