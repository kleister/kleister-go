// Code generated by go-swagger; DO NOT EDIT.

package minecraft

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/kleister/kleister-go/models"
)

// AppendMinecraftToBuildReader is a Reader for the AppendMinecraftToBuild structure.
type AppendMinecraftToBuildReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AppendMinecraftToBuildReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewAppendMinecraftToBuildOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 403:
		result := NewAppendMinecraftToBuildForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 412:
		result := NewAppendMinecraftToBuildPreconditionFailed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 422:
		result := NewAppendMinecraftToBuildUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewAppendMinecraftToBuildDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewAppendMinecraftToBuildOK creates a AppendMinecraftToBuildOK with default headers values
func NewAppendMinecraftToBuildOK() *AppendMinecraftToBuildOK {
	return &AppendMinecraftToBuildOK{}
}

/*AppendMinecraftToBuildOK handles this case with default header values.

A collection of assigned builds
*/
type AppendMinecraftToBuildOK struct {
	Payload []*models.Build
}

func (o *AppendMinecraftToBuildOK) Error() string {
	return fmt.Sprintf("[POST /minecraft/{minecraft_id}/builds][%d] appendMinecraftToBuildOK  %+v", 200, o.Payload)
}

func (o *AppendMinecraftToBuildOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAppendMinecraftToBuildForbidden creates a AppendMinecraftToBuildForbidden with default headers values
func NewAppendMinecraftToBuildForbidden() *AppendMinecraftToBuildForbidden {
	return &AppendMinecraftToBuildForbidden{}
}

/*AppendMinecraftToBuildForbidden handles this case with default header values.

User is not authorized
*/
type AppendMinecraftToBuildForbidden struct {
	Payload *models.GeneralError
}

func (o *AppendMinecraftToBuildForbidden) Error() string {
	return fmt.Sprintf("[POST /minecraft/{minecraft_id}/builds][%d] appendMinecraftToBuildForbidden  %+v", 403, o.Payload)
}

func (o *AppendMinecraftToBuildForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GeneralError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAppendMinecraftToBuildPreconditionFailed creates a AppendMinecraftToBuildPreconditionFailed with default headers values
func NewAppendMinecraftToBuildPreconditionFailed() *AppendMinecraftToBuildPreconditionFailed {
	return &AppendMinecraftToBuildPreconditionFailed{}
}

/*AppendMinecraftToBuildPreconditionFailed handles this case with default header values.

Failed to parse request body
*/
type AppendMinecraftToBuildPreconditionFailed struct {
	Payload *models.GeneralError
}

func (o *AppendMinecraftToBuildPreconditionFailed) Error() string {
	return fmt.Sprintf("[POST /minecraft/{minecraft_id}/builds][%d] appendMinecraftToBuildPreconditionFailed  %+v", 412, o.Payload)
}

func (o *AppendMinecraftToBuildPreconditionFailed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GeneralError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAppendMinecraftToBuildUnprocessableEntity creates a AppendMinecraftToBuildUnprocessableEntity with default headers values
func NewAppendMinecraftToBuildUnprocessableEntity() *AppendMinecraftToBuildUnprocessableEntity {
	return &AppendMinecraftToBuildUnprocessableEntity{}
}

/*AppendMinecraftToBuildUnprocessableEntity handles this case with default header values.

Build is already appended
*/
type AppendMinecraftToBuildUnprocessableEntity struct {
	Payload *models.ValidationError
}

func (o *AppendMinecraftToBuildUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /minecraft/{minecraft_id}/builds][%d] appendMinecraftToBuildUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *AppendMinecraftToBuildUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAppendMinecraftToBuildDefault creates a AppendMinecraftToBuildDefault with default headers values
func NewAppendMinecraftToBuildDefault(code int) *AppendMinecraftToBuildDefault {
	return &AppendMinecraftToBuildDefault{
		_statusCode: code,
	}
}

/*AppendMinecraftToBuildDefault handles this case with default header values.

Some error unrelated to the handler
*/
type AppendMinecraftToBuildDefault struct {
	_statusCode int

	Payload *models.GeneralError
}

// Code gets the status code for the append minecraft to build default response
func (o *AppendMinecraftToBuildDefault) Code() int {
	return o._statusCode
}

func (o *AppendMinecraftToBuildDefault) Error() string {
	return fmt.Sprintf("[POST /minecraft/{minecraft_id}/builds][%d] AppendMinecraftToBuild default  %+v", o._statusCode, o.Payload)
}

func (o *AppendMinecraftToBuildDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GeneralError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
