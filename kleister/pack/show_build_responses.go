// Code generated by go-swagger; DO NOT EDIT.

package pack

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/kleister/kleister-go/models"
)

// ShowBuildReader is a Reader for the ShowBuild structure.
type ShowBuildReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ShowBuildReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewShowBuildOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 403:
		result := NewShowBuildForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewShowBuildDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewShowBuildOK creates a ShowBuildOK with default headers values
func NewShowBuildOK() *ShowBuildOK {
	return &ShowBuildOK{}
}

/*ShowBuildOK handles this case with default header values.

The fetched build details
*/
type ShowBuildOK struct {
	Payload *models.Build
}

func (o *ShowBuildOK) Error() string {
	return fmt.Sprintf("[GET /packs/{pack_id}/builds/{build_id}][%d] showBuildOK  %+v", 200, o.Payload)
}

func (o *ShowBuildOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Build)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewShowBuildForbidden creates a ShowBuildForbidden with default headers values
func NewShowBuildForbidden() *ShowBuildForbidden {
	return &ShowBuildForbidden{}
}

/*ShowBuildForbidden handles this case with default header values.

User is not authorized
*/
type ShowBuildForbidden struct {
	Payload *models.GeneralError
}

func (o *ShowBuildForbidden) Error() string {
	return fmt.Sprintf("[GET /packs/{pack_id}/builds/{build_id}][%d] showBuildForbidden  %+v", 403, o.Payload)
}

func (o *ShowBuildForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GeneralError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewShowBuildDefault creates a ShowBuildDefault with default headers values
func NewShowBuildDefault(code int) *ShowBuildDefault {
	return &ShowBuildDefault{
		_statusCode: code,
	}
}

/*ShowBuildDefault handles this case with default header values.

Some error unrelated to the handler
*/
type ShowBuildDefault struct {
	_statusCode int

	Payload *models.GeneralError
}

// Code gets the status code for the show build default response
func (o *ShowBuildDefault) Code() int {
	return o._statusCode
}

func (o *ShowBuildDefault) Error() string {
	return fmt.Sprintf("[GET /packs/{pack_id}/builds/{build_id}][%d] ShowBuild default  %+v", o._statusCode, o.Payload)
}

func (o *ShowBuildDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GeneralError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
