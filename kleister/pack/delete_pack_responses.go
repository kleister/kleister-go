// Code generated by go-swagger; DO NOT EDIT.

package pack

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/kleister/kleister-go/v1/models"
)

// DeletePackReader is a Reader for the DeletePack structure.
type DeletePackReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeletePackReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeletePackOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeletePackBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeletePackForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewDeletePackDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeletePackOK creates a DeletePackOK with default headers values
func NewDeletePackOK() *DeletePackOK {
	return &DeletePackOK{}
}

/* DeletePackOK describes a response with status code 200, with default header values.

Plain success message
*/
type DeletePackOK struct {
	Payload *models.GeneralError
}

func (o *DeletePackOK) Error() string {
	return fmt.Sprintf("[DELETE /packs/{pack_id}][%d] deletePackOK  %+v", 200, o.Payload)
}
func (o *DeletePackOK) GetPayload() *models.GeneralError {
	return o.Payload
}

func (o *DeletePackOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GeneralError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeletePackBadRequest creates a DeletePackBadRequest with default headers values
func NewDeletePackBadRequest() *DeletePackBadRequest {
	return &DeletePackBadRequest{}
}

/* DeletePackBadRequest describes a response with status code 400, with default header values.

Failed to delete the pack
*/
type DeletePackBadRequest struct {
	Payload *models.GeneralError
}

func (o *DeletePackBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /packs/{pack_id}][%d] deletePackBadRequest  %+v", 400, o.Payload)
}
func (o *DeletePackBadRequest) GetPayload() *models.GeneralError {
	return o.Payload
}

func (o *DeletePackBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GeneralError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeletePackForbidden creates a DeletePackForbidden with default headers values
func NewDeletePackForbidden() *DeletePackForbidden {
	return &DeletePackForbidden{}
}

/* DeletePackForbidden describes a response with status code 403, with default header values.

User is not authorized
*/
type DeletePackForbidden struct {
	Payload *models.GeneralError
}

func (o *DeletePackForbidden) Error() string {
	return fmt.Sprintf("[DELETE /packs/{pack_id}][%d] deletePackForbidden  %+v", 403, o.Payload)
}
func (o *DeletePackForbidden) GetPayload() *models.GeneralError {
	return o.Payload
}

func (o *DeletePackForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GeneralError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeletePackDefault creates a DeletePackDefault with default headers values
func NewDeletePackDefault(code int) *DeletePackDefault {
	return &DeletePackDefault{
		_statusCode: code,
	}
}

/* DeletePackDefault describes a response with status code -1, with default header values.

Some error unrelated to the handler
*/
type DeletePackDefault struct {
	_statusCode int

	Payload *models.GeneralError
}

// Code gets the status code for the delete pack default response
func (o *DeletePackDefault) Code() int {
	return o._statusCode
}

func (o *DeletePackDefault) Error() string {
	return fmt.Sprintf("[DELETE /packs/{pack_id}][%d] DeletePack default  %+v", o._statusCode, o.Payload)
}
func (o *DeletePackDefault) GetPayload() *models.GeneralError {
	return o.Payload
}

func (o *DeletePackDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GeneralError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
