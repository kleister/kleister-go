// Code generated by go-swagger; DO NOT EDIT.

package pack

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/kleister/kleister-go/models"
)

// ListPackUsersReader is a Reader for the ListPackUsers structure.
type ListPackUsersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListPackUsersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewListPackUsersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 403:
		result := NewListPackUsersForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewListPackUsersDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListPackUsersOK creates a ListPackUsersOK with default headers values
func NewListPackUsersOK() *ListPackUsersOK {
	return &ListPackUsersOK{}
}

/*ListPackUsersOK handles this case with default header values.

A collection of pack users
*/
type ListPackUsersOK struct {
	Payload []*models.UserPack
}

func (o *ListPackUsersOK) Error() string {
	return fmt.Sprintf("[GET /packs/{pack_id}/users][%d] listPackUsersOK  %+v", 200, o.Payload)
}

func (o *ListPackUsersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListPackUsersForbidden creates a ListPackUsersForbidden with default headers values
func NewListPackUsersForbidden() *ListPackUsersForbidden {
	return &ListPackUsersForbidden{}
}

/*ListPackUsersForbidden handles this case with default header values.

User is not authorized
*/
type ListPackUsersForbidden struct {
	Payload *models.GeneralError
}

func (o *ListPackUsersForbidden) Error() string {
	return fmt.Sprintf("[GET /packs/{pack_id}/users][%d] listPackUsersForbidden  %+v", 403, o.Payload)
}

func (o *ListPackUsersForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GeneralError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListPackUsersDefault creates a ListPackUsersDefault with default headers values
func NewListPackUsersDefault(code int) *ListPackUsersDefault {
	return &ListPackUsersDefault{
		_statusCode: code,
	}
}

/*ListPackUsersDefault handles this case with default header values.

Some error unrelated to the handler
*/
type ListPackUsersDefault struct {
	_statusCode int

	Payload *models.GeneralError
}

// Code gets the status code for the list pack users default response
func (o *ListPackUsersDefault) Code() int {
	return o._statusCode
}

func (o *ListPackUsersDefault) Error() string {
	return fmt.Sprintf("[GET /packs/{pack_id}/users][%d] ListPackUsers default  %+v", o._statusCode, o.Payload)
}

func (o *ListPackUsersDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GeneralError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
