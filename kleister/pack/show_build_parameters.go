// Code generated by go-swagger; DO NOT EDIT.

package pack

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewShowBuildParams creates a new ShowBuildParams object
// with the default values initialized.
func NewShowBuildParams() *ShowBuildParams {
	var ()
	return &ShowBuildParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewShowBuildParamsWithTimeout creates a new ShowBuildParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewShowBuildParamsWithTimeout(timeout time.Duration) *ShowBuildParams {
	var ()
	return &ShowBuildParams{

		timeout: timeout,
	}
}

// NewShowBuildParamsWithContext creates a new ShowBuildParams object
// with the default values initialized, and the ability to set a context for a request
func NewShowBuildParamsWithContext(ctx context.Context) *ShowBuildParams {
	var ()
	return &ShowBuildParams{

		Context: ctx,
	}
}

// NewShowBuildParamsWithHTTPClient creates a new ShowBuildParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewShowBuildParamsWithHTTPClient(client *http.Client) *ShowBuildParams {
	var ()
	return &ShowBuildParams{
		HTTPClient: client,
	}
}

/*ShowBuildParams contains all the parameters to send to the API endpoint
for the show build operation typically these are written to a http.Request
*/
type ShowBuildParams struct {

	/*BuildID
	  A build UUID or slug

	*/
	BuildID string
	/*PackID
	  A pack UUID or slug

	*/
	PackID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the show build params
func (o *ShowBuildParams) WithTimeout(timeout time.Duration) *ShowBuildParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the show build params
func (o *ShowBuildParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the show build params
func (o *ShowBuildParams) WithContext(ctx context.Context) *ShowBuildParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the show build params
func (o *ShowBuildParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the show build params
func (o *ShowBuildParams) WithHTTPClient(client *http.Client) *ShowBuildParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the show build params
func (o *ShowBuildParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBuildID adds the buildID to the show build params
func (o *ShowBuildParams) WithBuildID(buildID string) *ShowBuildParams {
	o.SetBuildID(buildID)
	return o
}

// SetBuildID adds the buildId to the show build params
func (o *ShowBuildParams) SetBuildID(buildID string) {
	o.BuildID = buildID
}

// WithPackID adds the packID to the show build params
func (o *ShowBuildParams) WithPackID(packID string) *ShowBuildParams {
	o.SetPackID(packID)
	return o
}

// SetPackID adds the packId to the show build params
func (o *ShowBuildParams) SetPackID(packID string) {
	o.PackID = packID
}

// WriteToRequest writes these params to a swagger request
func (o *ShowBuildParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param build_id
	if err := r.SetPathParam("build_id", o.BuildID); err != nil {
		return err
	}

	// path param pack_id
	if err := r.SetPathParam("pack_id", o.PackID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
