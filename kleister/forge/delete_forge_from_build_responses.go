// Code generated by go-swagger; DO NOT EDIT.

package forge

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/kleister/kleister-go/models"
)

// DeleteForgeFromBuildReader is a Reader for the DeleteForgeFromBuild structure.
type DeleteForgeFromBuildReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteForgeFromBuildReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewDeleteForgeFromBuildOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 403:
		result := NewDeleteForgeFromBuildForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 412:
		result := NewDeleteForgeFromBuildPreconditionFailed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 422:
		result := NewDeleteForgeFromBuildUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewDeleteForgeFromBuildDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteForgeFromBuildOK creates a DeleteForgeFromBuildOK with default headers values
func NewDeleteForgeFromBuildOK() *DeleteForgeFromBuildOK {
	return &DeleteForgeFromBuildOK{}
}

/*DeleteForgeFromBuildOK handles this case with default header values.

A collection of assigned builds
*/
type DeleteForgeFromBuildOK struct {
	Payload []*models.Build
}

func (o *DeleteForgeFromBuildOK) Error() string {
	return fmt.Sprintf("[DELETE /forge/{forge_id}/builds][%d] deleteForgeFromBuildOK  %+v", 200, o.Payload)
}

func (o *DeleteForgeFromBuildOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteForgeFromBuildForbidden creates a DeleteForgeFromBuildForbidden with default headers values
func NewDeleteForgeFromBuildForbidden() *DeleteForgeFromBuildForbidden {
	return &DeleteForgeFromBuildForbidden{}
}

/*DeleteForgeFromBuildForbidden handles this case with default header values.

User is not authorized
*/
type DeleteForgeFromBuildForbidden struct {
	Payload *models.GeneralError
}

func (o *DeleteForgeFromBuildForbidden) Error() string {
	return fmt.Sprintf("[DELETE /forge/{forge_id}/builds][%d] deleteForgeFromBuildForbidden  %+v", 403, o.Payload)
}

func (o *DeleteForgeFromBuildForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GeneralError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteForgeFromBuildPreconditionFailed creates a DeleteForgeFromBuildPreconditionFailed with default headers values
func NewDeleteForgeFromBuildPreconditionFailed() *DeleteForgeFromBuildPreconditionFailed {
	return &DeleteForgeFromBuildPreconditionFailed{}
}

/*DeleteForgeFromBuildPreconditionFailed handles this case with default header values.

Failed to parse request body
*/
type DeleteForgeFromBuildPreconditionFailed struct {
	Payload *models.GeneralError
}

func (o *DeleteForgeFromBuildPreconditionFailed) Error() string {
	return fmt.Sprintf("[DELETE /forge/{forge_id}/builds][%d] deleteForgeFromBuildPreconditionFailed  %+v", 412, o.Payload)
}

func (o *DeleteForgeFromBuildPreconditionFailed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GeneralError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteForgeFromBuildUnprocessableEntity creates a DeleteForgeFromBuildUnprocessableEntity with default headers values
func NewDeleteForgeFromBuildUnprocessableEntity() *DeleteForgeFromBuildUnprocessableEntity {
	return &DeleteForgeFromBuildUnprocessableEntity{}
}

/*DeleteForgeFromBuildUnprocessableEntity handles this case with default header values.

Build is not assigned
*/
type DeleteForgeFromBuildUnprocessableEntity struct {
	Payload *models.ValidationError
}

func (o *DeleteForgeFromBuildUnprocessableEntity) Error() string {
	return fmt.Sprintf("[DELETE /forge/{forge_id}/builds][%d] deleteForgeFromBuildUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *DeleteForgeFromBuildUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteForgeFromBuildDefault creates a DeleteForgeFromBuildDefault with default headers values
func NewDeleteForgeFromBuildDefault(code int) *DeleteForgeFromBuildDefault {
	return &DeleteForgeFromBuildDefault{
		_statusCode: code,
	}
}

/*DeleteForgeFromBuildDefault handles this case with default header values.

Some error unrelated to the handler
*/
type DeleteForgeFromBuildDefault struct {
	_statusCode int

	Payload *models.GeneralError
}

// Code gets the status code for the delete forge from build default response
func (o *DeleteForgeFromBuildDefault) Code() int {
	return o._statusCode
}

func (o *DeleteForgeFromBuildDefault) Error() string {
	return fmt.Sprintf("[DELETE /forge/{forge_id}/builds][%d] DeleteForgeFromBuild default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteForgeFromBuildDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GeneralError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
