// Code generated by go-swagger; DO NOT EDIT.

package forge

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/kleister/kleister-go/models"
)

// NewDeleteForgeFromBuildParams creates a new DeleteForgeFromBuildParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewDeleteForgeFromBuildParams() *DeleteForgeFromBuildParams {
	return &DeleteForgeFromBuildParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteForgeFromBuildParamsWithTimeout creates a new DeleteForgeFromBuildParams object
// with the ability to set a timeout on a request.
func NewDeleteForgeFromBuildParamsWithTimeout(timeout time.Duration) *DeleteForgeFromBuildParams {
	return &DeleteForgeFromBuildParams{
		timeout: timeout,
	}
}

// NewDeleteForgeFromBuildParamsWithContext creates a new DeleteForgeFromBuildParams object
// with the ability to set a context for a request.
func NewDeleteForgeFromBuildParamsWithContext(ctx context.Context) *DeleteForgeFromBuildParams {
	return &DeleteForgeFromBuildParams{
		Context: ctx,
	}
}

// NewDeleteForgeFromBuildParamsWithHTTPClient creates a new DeleteForgeFromBuildParams object
// with the ability to set a custom HTTPClient for a request.
func NewDeleteForgeFromBuildParamsWithHTTPClient(client *http.Client) *DeleteForgeFromBuildParams {
	return &DeleteForgeFromBuildParams{
		HTTPClient: client,
	}
}

/*
DeleteForgeFromBuildParams contains all the parameters to send to the API endpoint

	for the delete forge from build operation.

	Typically these are written to a http.Request.
*/
type DeleteForgeFromBuildParams struct {

	/* ForgeBuild.

	   The build data to unlink
	*/
	ForgeBuild *models.ForgeBuildParams

	/* ForgeID.

	   A forge UUID or slug
	*/
	ForgeID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the delete forge from build params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeleteForgeFromBuildParams) WithDefaults() *DeleteForgeFromBuildParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the delete forge from build params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeleteForgeFromBuildParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the delete forge from build params
func (o *DeleteForgeFromBuildParams) WithTimeout(timeout time.Duration) *DeleteForgeFromBuildParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete forge from build params
func (o *DeleteForgeFromBuildParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete forge from build params
func (o *DeleteForgeFromBuildParams) WithContext(ctx context.Context) *DeleteForgeFromBuildParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete forge from build params
func (o *DeleteForgeFromBuildParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete forge from build params
func (o *DeleteForgeFromBuildParams) WithHTTPClient(client *http.Client) *DeleteForgeFromBuildParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete forge from build params
func (o *DeleteForgeFromBuildParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithForgeBuild adds the forgeBuild to the delete forge from build params
func (o *DeleteForgeFromBuildParams) WithForgeBuild(forgeBuild *models.ForgeBuildParams) *DeleteForgeFromBuildParams {
	o.SetForgeBuild(forgeBuild)
	return o
}

// SetForgeBuild adds the forgeBuild to the delete forge from build params
func (o *DeleteForgeFromBuildParams) SetForgeBuild(forgeBuild *models.ForgeBuildParams) {
	o.ForgeBuild = forgeBuild
}

// WithForgeID adds the forgeID to the delete forge from build params
func (o *DeleteForgeFromBuildParams) WithForgeID(forgeID string) *DeleteForgeFromBuildParams {
	o.SetForgeID(forgeID)
	return o
}

// SetForgeID adds the forgeId to the delete forge from build params
func (o *DeleteForgeFromBuildParams) SetForgeID(forgeID string) {
	o.ForgeID = forgeID
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteForgeFromBuildParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.ForgeBuild != nil {
		if err := r.SetBodyParam(o.ForgeBuild); err != nil {
			return err
		}
	}

	// path param forge_id
	if err := r.SetPathParam("forge_id", o.ForgeID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
