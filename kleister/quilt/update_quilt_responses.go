// Code generated by go-swagger; DO NOT EDIT.

package quilt

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/kleister/kleister-go/models"
)

// UpdateQuiltReader is a Reader for the UpdateQuilt structure.
type UpdateQuiltReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateQuiltReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateQuiltOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewUpdateQuiltForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewUpdateQuiltServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewUpdateQuiltDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewUpdateQuiltOK creates a UpdateQuiltOK with default headers values
func NewUpdateQuiltOK() *UpdateQuiltOK {
	return &UpdateQuiltOK{}
}

/*
UpdateQuiltOK describes a response with status code 200, with default header values.

Plain success message
*/
type UpdateQuiltOK struct {
	Payload *models.GeneralError
}

// IsSuccess returns true when this update quilt o k response has a 2xx status code
func (o *UpdateQuiltOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update quilt o k response has a 3xx status code
func (o *UpdateQuiltOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update quilt o k response has a 4xx status code
func (o *UpdateQuiltOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update quilt o k response has a 5xx status code
func (o *UpdateQuiltOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update quilt o k response a status code equal to that given
func (o *UpdateQuiltOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update quilt o k response
func (o *UpdateQuiltOK) Code() int {
	return 200
}

func (o *UpdateQuiltOK) Error() string {
	return fmt.Sprintf("[PUT /quilt][%d] updateQuiltOK  %+v", 200, o.Payload)
}

func (o *UpdateQuiltOK) String() string {
	return fmt.Sprintf("[PUT /quilt][%d] updateQuiltOK  %+v", 200, o.Payload)
}

func (o *UpdateQuiltOK) GetPayload() *models.GeneralError {
	return o.Payload
}

func (o *UpdateQuiltOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GeneralError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateQuiltForbidden creates a UpdateQuiltForbidden with default headers values
func NewUpdateQuiltForbidden() *UpdateQuiltForbidden {
	return &UpdateQuiltForbidden{}
}

/*
UpdateQuiltForbidden describes a response with status code 403, with default header values.

User is not authorized
*/
type UpdateQuiltForbidden struct {
	Payload *models.GeneralError
}

// IsSuccess returns true when this update quilt forbidden response has a 2xx status code
func (o *UpdateQuiltForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update quilt forbidden response has a 3xx status code
func (o *UpdateQuiltForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update quilt forbidden response has a 4xx status code
func (o *UpdateQuiltForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update quilt forbidden response has a 5xx status code
func (o *UpdateQuiltForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update quilt forbidden response a status code equal to that given
func (o *UpdateQuiltForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update quilt forbidden response
func (o *UpdateQuiltForbidden) Code() int {
	return 403
}

func (o *UpdateQuiltForbidden) Error() string {
	return fmt.Sprintf("[PUT /quilt][%d] updateQuiltForbidden  %+v", 403, o.Payload)
}

func (o *UpdateQuiltForbidden) String() string {
	return fmt.Sprintf("[PUT /quilt][%d] updateQuiltForbidden  %+v", 403, o.Payload)
}

func (o *UpdateQuiltForbidden) GetPayload() *models.GeneralError {
	return o.Payload
}

func (o *UpdateQuiltForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GeneralError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateQuiltServiceUnavailable creates a UpdateQuiltServiceUnavailable with default headers values
func NewUpdateQuiltServiceUnavailable() *UpdateQuiltServiceUnavailable {
	return &UpdateQuiltServiceUnavailable{}
}

/*
UpdateQuiltServiceUnavailable describes a response with status code 503, with default header values.

If remote source is not available
*/
type UpdateQuiltServiceUnavailable struct {
	Payload *models.GeneralError
}

// IsSuccess returns true when this update quilt service unavailable response has a 2xx status code
func (o *UpdateQuiltServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update quilt service unavailable response has a 3xx status code
func (o *UpdateQuiltServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update quilt service unavailable response has a 4xx status code
func (o *UpdateQuiltServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this update quilt service unavailable response has a 5xx status code
func (o *UpdateQuiltServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this update quilt service unavailable response a status code equal to that given
func (o *UpdateQuiltServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

// Code gets the status code for the update quilt service unavailable response
func (o *UpdateQuiltServiceUnavailable) Code() int {
	return 503
}

func (o *UpdateQuiltServiceUnavailable) Error() string {
	return fmt.Sprintf("[PUT /quilt][%d] updateQuiltServiceUnavailable  %+v", 503, o.Payload)
}

func (o *UpdateQuiltServiceUnavailable) String() string {
	return fmt.Sprintf("[PUT /quilt][%d] updateQuiltServiceUnavailable  %+v", 503, o.Payload)
}

func (o *UpdateQuiltServiceUnavailable) GetPayload() *models.GeneralError {
	return o.Payload
}

func (o *UpdateQuiltServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GeneralError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateQuiltDefault creates a UpdateQuiltDefault with default headers values
func NewUpdateQuiltDefault(code int) *UpdateQuiltDefault {
	return &UpdateQuiltDefault{
		_statusCode: code,
	}
}

/*
UpdateQuiltDefault describes a response with status code -1, with default header values.

Some error unrelated to the handler
*/
type UpdateQuiltDefault struct {
	_statusCode int

	Payload *models.GeneralError
}

// IsSuccess returns true when this update quilt default response has a 2xx status code
func (o *UpdateQuiltDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this update quilt default response has a 3xx status code
func (o *UpdateQuiltDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this update quilt default response has a 4xx status code
func (o *UpdateQuiltDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this update quilt default response has a 5xx status code
func (o *UpdateQuiltDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this update quilt default response a status code equal to that given
func (o *UpdateQuiltDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the update quilt default response
func (o *UpdateQuiltDefault) Code() int {
	return o._statusCode
}

func (o *UpdateQuiltDefault) Error() string {
	return fmt.Sprintf("[PUT /quilt][%d] UpdateQuilt default  %+v", o._statusCode, o.Payload)
}

func (o *UpdateQuiltDefault) String() string {
	return fmt.Sprintf("[PUT /quilt][%d] UpdateQuilt default  %+v", o._statusCode, o.Payload)
}

func (o *UpdateQuiltDefault) GetPayload() *models.GeneralError {
	return o.Payload
}

func (o *UpdateQuiltDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GeneralError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
