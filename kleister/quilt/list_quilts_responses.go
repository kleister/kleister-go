// Code generated by go-swagger; DO NOT EDIT.

package quilt

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/kleister/kleister-go/models"
)

// ListQuiltsReader is a Reader for the ListQuilts structure.
type ListQuiltsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListQuiltsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListQuiltsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewListQuiltsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewListQuiltsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListQuiltsOK creates a ListQuiltsOK with default headers values
func NewListQuiltsOK() *ListQuiltsOK {
	return &ListQuiltsOK{}
}

/*
ListQuiltsOK describes a response with status code 200, with default header values.

A collection of quilt versions
*/
type ListQuiltsOK struct {
	Payload *models.Quilts
}

// IsSuccess returns true when this list quilts o k response has a 2xx status code
func (o *ListQuiltsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list quilts o k response has a 3xx status code
func (o *ListQuiltsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list quilts o k response has a 4xx status code
func (o *ListQuiltsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list quilts o k response has a 5xx status code
func (o *ListQuiltsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list quilts o k response a status code equal to that given
func (o *ListQuiltsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list quilts o k response
func (o *ListQuiltsOK) Code() int {
	return 200
}

func (o *ListQuiltsOK) Error() string {
	return fmt.Sprintf("[GET /quilt][%d] listQuiltsOK  %+v", 200, o.Payload)
}

func (o *ListQuiltsOK) String() string {
	return fmt.Sprintf("[GET /quilt][%d] listQuiltsOK  %+v", 200, o.Payload)
}

func (o *ListQuiltsOK) GetPayload() *models.Quilts {
	return o.Payload
}

func (o *ListQuiltsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Quilts)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListQuiltsForbidden creates a ListQuiltsForbidden with default headers values
func NewListQuiltsForbidden() *ListQuiltsForbidden {
	return &ListQuiltsForbidden{}
}

/*
ListQuiltsForbidden describes a response with status code 403, with default header values.

User is not authorized
*/
type ListQuiltsForbidden struct {
	Payload *models.GeneralError
}

// IsSuccess returns true when this list quilts forbidden response has a 2xx status code
func (o *ListQuiltsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list quilts forbidden response has a 3xx status code
func (o *ListQuiltsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list quilts forbidden response has a 4xx status code
func (o *ListQuiltsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list quilts forbidden response has a 5xx status code
func (o *ListQuiltsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list quilts forbidden response a status code equal to that given
func (o *ListQuiltsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the list quilts forbidden response
func (o *ListQuiltsForbidden) Code() int {
	return 403
}

func (o *ListQuiltsForbidden) Error() string {
	return fmt.Sprintf("[GET /quilt][%d] listQuiltsForbidden  %+v", 403, o.Payload)
}

func (o *ListQuiltsForbidden) String() string {
	return fmt.Sprintf("[GET /quilt][%d] listQuiltsForbidden  %+v", 403, o.Payload)
}

func (o *ListQuiltsForbidden) GetPayload() *models.GeneralError {
	return o.Payload
}

func (o *ListQuiltsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GeneralError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListQuiltsDefault creates a ListQuiltsDefault with default headers values
func NewListQuiltsDefault(code int) *ListQuiltsDefault {
	return &ListQuiltsDefault{
		_statusCode: code,
	}
}

/*
ListQuiltsDefault describes a response with status code -1, with default header values.

Some error unrelated to the handler
*/
type ListQuiltsDefault struct {
	_statusCode int

	Payload *models.GeneralError
}

// IsSuccess returns true when this list quilts default response has a 2xx status code
func (o *ListQuiltsDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this list quilts default response has a 3xx status code
func (o *ListQuiltsDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this list quilts default response has a 4xx status code
func (o *ListQuiltsDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this list quilts default response has a 5xx status code
func (o *ListQuiltsDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this list quilts default response a status code equal to that given
func (o *ListQuiltsDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the list quilts default response
func (o *ListQuiltsDefault) Code() int {
	return o._statusCode
}

func (o *ListQuiltsDefault) Error() string {
	return fmt.Sprintf("[GET /quilt][%d] ListQuilts default  %+v", o._statusCode, o.Payload)
}

func (o *ListQuiltsDefault) String() string {
	return fmt.Sprintf("[GET /quilt][%d] ListQuilts default  %+v", o._statusCode, o.Payload)
}

func (o *ListQuiltsDefault) GetPayload() *models.GeneralError {
	return o.Payload
}

func (o *ListQuiltsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GeneralError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
