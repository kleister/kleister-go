// Code generated by go-swagger; DO NOT EDIT.

package auth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/kleister/kleister-go/v1/models"
)

// ExternalInitializeReader is a Reader for the ExternalInitialize structure.
type ExternalInitializeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ExternalInitializeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 307:
		result := NewExternalInitializeTemporaryRedirect()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewExternalInitializeNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewExternalInitializeInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewExternalInitializeDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewExternalInitializeTemporaryRedirect creates a ExternalInitializeTemporaryRedirect with default headers values
func NewExternalInitializeTemporaryRedirect() *ExternalInitializeTemporaryRedirect {
	return &ExternalInitializeTemporaryRedirect{}
}

/*
ExternalInitializeTemporaryRedirect describes a response with status code 307, with default header values.

Redirect to external auth provider
*/
type ExternalInitializeTemporaryRedirect struct {
}

// IsSuccess returns true when this external initialize temporary redirect response has a 2xx status code
func (o *ExternalInitializeTemporaryRedirect) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this external initialize temporary redirect response has a 3xx status code
func (o *ExternalInitializeTemporaryRedirect) IsRedirect() bool {
	return true
}

// IsClientError returns true when this external initialize temporary redirect response has a 4xx status code
func (o *ExternalInitializeTemporaryRedirect) IsClientError() bool {
	return false
}

// IsServerError returns true when this external initialize temporary redirect response has a 5xx status code
func (o *ExternalInitializeTemporaryRedirect) IsServerError() bool {
	return false
}

// IsCode returns true when this external initialize temporary redirect response a status code equal to that given
func (o *ExternalInitializeTemporaryRedirect) IsCode(code int) bool {
	return code == 307
}

// Code gets the status code for the external initialize temporary redirect response
func (o *ExternalInitializeTemporaryRedirect) Code() int {
	return 307
}

func (o *ExternalInitializeTemporaryRedirect) Error() string {
	return fmt.Sprintf("[GET /auth/{provider}/initialize][%d] externalInitializeTemporaryRedirect ", 307)
}

func (o *ExternalInitializeTemporaryRedirect) String() string {
	return fmt.Sprintf("[GET /auth/{provider}/initialize][%d] externalInitializeTemporaryRedirect ", 307)
}

func (o *ExternalInitializeTemporaryRedirect) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewExternalInitializeNotFound creates a ExternalInitializeNotFound with default headers values
func NewExternalInitializeNotFound() *ExternalInitializeNotFound {
	return &ExternalInitializeNotFound{}
}

/*
ExternalInitializeNotFound describes a response with status code 404, with default header values.

Provider identifier is unknown
*/
type ExternalInitializeNotFound struct {
	Payload *models.GeneralError
}

// IsSuccess returns true when this external initialize not found response has a 2xx status code
func (o *ExternalInitializeNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this external initialize not found response has a 3xx status code
func (o *ExternalInitializeNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this external initialize not found response has a 4xx status code
func (o *ExternalInitializeNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this external initialize not found response has a 5xx status code
func (o *ExternalInitializeNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this external initialize not found response a status code equal to that given
func (o *ExternalInitializeNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the external initialize not found response
func (o *ExternalInitializeNotFound) Code() int {
	return 404
}

func (o *ExternalInitializeNotFound) Error() string {
	return fmt.Sprintf("[GET /auth/{provider}/initialize][%d] externalInitializeNotFound  %+v", 404, o.Payload)
}

func (o *ExternalInitializeNotFound) String() string {
	return fmt.Sprintf("[GET /auth/{provider}/initialize][%d] externalInitializeNotFound  %+v", 404, o.Payload)
}

func (o *ExternalInitializeNotFound) GetPayload() *models.GeneralError {
	return o.Payload
}

func (o *ExternalInitializeNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GeneralError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewExternalInitializeInternalServerError creates a ExternalInitializeInternalServerError with default headers values
func NewExternalInitializeInternalServerError() *ExternalInitializeInternalServerError {
	return &ExternalInitializeInternalServerError{}
}

/*
ExternalInitializeInternalServerError describes a response with status code 500, with default header values.

Failed to initialze the provider
*/
type ExternalInitializeInternalServerError struct {
	Payload *models.GeneralError
}

// IsSuccess returns true when this external initialize internal server error response has a 2xx status code
func (o *ExternalInitializeInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this external initialize internal server error response has a 3xx status code
func (o *ExternalInitializeInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this external initialize internal server error response has a 4xx status code
func (o *ExternalInitializeInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this external initialize internal server error response has a 5xx status code
func (o *ExternalInitializeInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this external initialize internal server error response a status code equal to that given
func (o *ExternalInitializeInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the external initialize internal server error response
func (o *ExternalInitializeInternalServerError) Code() int {
	return 500
}

func (o *ExternalInitializeInternalServerError) Error() string {
	return fmt.Sprintf("[GET /auth/{provider}/initialize][%d] externalInitializeInternalServerError  %+v", 500, o.Payload)
}

func (o *ExternalInitializeInternalServerError) String() string {
	return fmt.Sprintf("[GET /auth/{provider}/initialize][%d] externalInitializeInternalServerError  %+v", 500, o.Payload)
}

func (o *ExternalInitializeInternalServerError) GetPayload() *models.GeneralError {
	return o.Payload
}

func (o *ExternalInitializeInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GeneralError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewExternalInitializeDefault creates a ExternalInitializeDefault with default headers values
func NewExternalInitializeDefault(code int) *ExternalInitializeDefault {
	return &ExternalInitializeDefault{
		_statusCode: code,
	}
}

/*
ExternalInitializeDefault describes a response with status code -1, with default header values.

Some error unrelated to the handler
*/
type ExternalInitializeDefault struct {
	_statusCode int

	Payload *models.GeneralError
}

// IsSuccess returns true when this external initialize default response has a 2xx status code
func (o *ExternalInitializeDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this external initialize default response has a 3xx status code
func (o *ExternalInitializeDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this external initialize default response has a 4xx status code
func (o *ExternalInitializeDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this external initialize default response has a 5xx status code
func (o *ExternalInitializeDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this external initialize default response a status code equal to that given
func (o *ExternalInitializeDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the external initialize default response
func (o *ExternalInitializeDefault) Code() int {
	return o._statusCode
}

func (o *ExternalInitializeDefault) Error() string {
	return fmt.Sprintf("[GET /auth/{provider}/initialize][%d] ExternalInitialize default  %+v", o._statusCode, o.Payload)
}

func (o *ExternalInitializeDefault) String() string {
	return fmt.Sprintf("[GET /auth/{provider}/initialize][%d] ExternalInitialize default  %+v", o._statusCode, o.Payload)
}

func (o *ExternalInitializeDefault) GetPayload() *models.GeneralError {
	return o.Payload
}

func (o *ExternalInitializeDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GeneralError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
