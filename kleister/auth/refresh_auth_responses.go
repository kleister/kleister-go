// Code generated by go-swagger; DO NOT EDIT.

package auth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/kleister/kleister-go/models"
)

// RefreshAuthReader is a Reader for the RefreshAuth structure.
type RefreshAuthReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RefreshAuthReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRefreshAuthOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewRefreshAuthUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewRefreshAuthDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewRefreshAuthOK creates a RefreshAuthOK with default headers values
func NewRefreshAuthOK() *RefreshAuthOK {
	return &RefreshAuthOK{}
}

/*
RefreshAuthOK describes a response with status code 200, with default header values.

A refreshed token with expire
*/
type RefreshAuthOK struct {
	Payload *models.AuthToken
}

// IsSuccess returns true when this refresh auth o k response has a 2xx status code
func (o *RefreshAuthOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this refresh auth o k response has a 3xx status code
func (o *RefreshAuthOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this refresh auth o k response has a 4xx status code
func (o *RefreshAuthOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this refresh auth o k response has a 5xx status code
func (o *RefreshAuthOK) IsServerError() bool {
	return false
}

// IsCode returns true when this refresh auth o k response a status code equal to that given
func (o *RefreshAuthOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the refresh auth o k response
func (o *RefreshAuthOK) Code() int {
	return 200
}

func (o *RefreshAuthOK) Error() string {
	return fmt.Sprintf("[GET /auth/refresh][%d] refreshAuthOK  %+v", 200, o.Payload)
}

func (o *RefreshAuthOK) String() string {
	return fmt.Sprintf("[GET /auth/refresh][%d] refreshAuthOK  %+v", 200, o.Payload)
}

func (o *RefreshAuthOK) GetPayload() *models.AuthToken {
	return o.Payload
}

func (o *RefreshAuthOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AuthToken)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRefreshAuthUnauthorized creates a RefreshAuthUnauthorized with default headers values
func NewRefreshAuthUnauthorized() *RefreshAuthUnauthorized {
	return &RefreshAuthUnauthorized{}
}

/*
RefreshAuthUnauthorized describes a response with status code 401, with default header values.

Unauthorized if failed to generate
*/
type RefreshAuthUnauthorized struct {
	Payload *models.GeneralError
}

// IsSuccess returns true when this refresh auth unauthorized response has a 2xx status code
func (o *RefreshAuthUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this refresh auth unauthorized response has a 3xx status code
func (o *RefreshAuthUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this refresh auth unauthorized response has a 4xx status code
func (o *RefreshAuthUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this refresh auth unauthorized response has a 5xx status code
func (o *RefreshAuthUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this refresh auth unauthorized response a status code equal to that given
func (o *RefreshAuthUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the refresh auth unauthorized response
func (o *RefreshAuthUnauthorized) Code() int {
	return 401
}

func (o *RefreshAuthUnauthorized) Error() string {
	return fmt.Sprintf("[GET /auth/refresh][%d] refreshAuthUnauthorized  %+v", 401, o.Payload)
}

func (o *RefreshAuthUnauthorized) String() string {
	return fmt.Sprintf("[GET /auth/refresh][%d] refreshAuthUnauthorized  %+v", 401, o.Payload)
}

func (o *RefreshAuthUnauthorized) GetPayload() *models.GeneralError {
	return o.Payload
}

func (o *RefreshAuthUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GeneralError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRefreshAuthDefault creates a RefreshAuthDefault with default headers values
func NewRefreshAuthDefault(code int) *RefreshAuthDefault {
	return &RefreshAuthDefault{
		_statusCode: code,
	}
}

/*
RefreshAuthDefault describes a response with status code -1, with default header values.

Some error unrelated to the handler
*/
type RefreshAuthDefault struct {
	_statusCode int

	Payload *models.GeneralError
}

// IsSuccess returns true when this refresh auth default response has a 2xx status code
func (o *RefreshAuthDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this refresh auth default response has a 3xx status code
func (o *RefreshAuthDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this refresh auth default response has a 4xx status code
func (o *RefreshAuthDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this refresh auth default response has a 5xx status code
func (o *RefreshAuthDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this refresh auth default response a status code equal to that given
func (o *RefreshAuthDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the refresh auth default response
func (o *RefreshAuthDefault) Code() int {
	return o._statusCode
}

func (o *RefreshAuthDefault) Error() string {
	return fmt.Sprintf("[GET /auth/refresh][%d] RefreshAuth default  %+v", o._statusCode, o.Payload)
}

func (o *RefreshAuthDefault) String() string {
	return fmt.Sprintf("[GET /auth/refresh][%d] RefreshAuth default  %+v", o._statusCode, o.Payload)
}

func (o *RefreshAuthDefault) GetPayload() *models.GeneralError {
	return o.Payload
}

func (o *RefreshAuthDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GeneralError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
