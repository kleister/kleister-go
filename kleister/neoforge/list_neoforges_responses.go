// Code generated by go-swagger; DO NOT EDIT.

package neoforge

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/kleister/kleister-go/v1/models"
)

// ListNeoforgesReader is a Reader for the ListNeoforges structure.
type ListNeoforgesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListNeoforgesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListNeoforgesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewListNeoforgesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewListNeoforgesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListNeoforgesOK creates a ListNeoforgesOK with default headers values
func NewListNeoforgesOK() *ListNeoforgesOK {
	return &ListNeoforgesOK{}
}

/*
ListNeoforgesOK describes a response with status code 200, with default header values.

A collection of Neoforge versions
*/
type ListNeoforgesOK struct {
	Payload *models.Neoforges
}

// IsSuccess returns true when this list neoforges o k response has a 2xx status code
func (o *ListNeoforgesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list neoforges o k response has a 3xx status code
func (o *ListNeoforgesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list neoforges o k response has a 4xx status code
func (o *ListNeoforgesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list neoforges o k response has a 5xx status code
func (o *ListNeoforgesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list neoforges o k response a status code equal to that given
func (o *ListNeoforgesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list neoforges o k response
func (o *ListNeoforgesOK) Code() int {
	return 200
}

func (o *ListNeoforgesOK) Error() string {
	return fmt.Sprintf("[GET /neoforge][%d] listNeoforgesOK  %+v", 200, o.Payload)
}

func (o *ListNeoforgesOK) String() string {
	return fmt.Sprintf("[GET /neoforge][%d] listNeoforgesOK  %+v", 200, o.Payload)
}

func (o *ListNeoforgesOK) GetPayload() *models.Neoforges {
	return o.Payload
}

func (o *ListNeoforgesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Neoforges)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListNeoforgesForbidden creates a ListNeoforgesForbidden with default headers values
func NewListNeoforgesForbidden() *ListNeoforgesForbidden {
	return &ListNeoforgesForbidden{}
}

/*
ListNeoforgesForbidden describes a response with status code 403, with default header values.

User is not authorized
*/
type ListNeoforgesForbidden struct {
	Payload *models.GeneralError
}

// IsSuccess returns true when this list neoforges forbidden response has a 2xx status code
func (o *ListNeoforgesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list neoforges forbidden response has a 3xx status code
func (o *ListNeoforgesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list neoforges forbidden response has a 4xx status code
func (o *ListNeoforgesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list neoforges forbidden response has a 5xx status code
func (o *ListNeoforgesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list neoforges forbidden response a status code equal to that given
func (o *ListNeoforgesForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the list neoforges forbidden response
func (o *ListNeoforgesForbidden) Code() int {
	return 403
}

func (o *ListNeoforgesForbidden) Error() string {
	return fmt.Sprintf("[GET /neoforge][%d] listNeoforgesForbidden  %+v", 403, o.Payload)
}

func (o *ListNeoforgesForbidden) String() string {
	return fmt.Sprintf("[GET /neoforge][%d] listNeoforgesForbidden  %+v", 403, o.Payload)
}

func (o *ListNeoforgesForbidden) GetPayload() *models.GeneralError {
	return o.Payload
}

func (o *ListNeoforgesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GeneralError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListNeoforgesDefault creates a ListNeoforgesDefault with default headers values
func NewListNeoforgesDefault(code int) *ListNeoforgesDefault {
	return &ListNeoforgesDefault{
		_statusCode: code,
	}
}

/*
ListNeoforgesDefault describes a response with status code -1, with default header values.

Some error unrelated to the handler
*/
type ListNeoforgesDefault struct {
	_statusCode int

	Payload *models.GeneralError
}

// IsSuccess returns true when this list neoforges default response has a 2xx status code
func (o *ListNeoforgesDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this list neoforges default response has a 3xx status code
func (o *ListNeoforgesDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this list neoforges default response has a 4xx status code
func (o *ListNeoforgesDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this list neoforges default response has a 5xx status code
func (o *ListNeoforgesDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this list neoforges default response a status code equal to that given
func (o *ListNeoforgesDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the list neoforges default response
func (o *ListNeoforgesDefault) Code() int {
	return o._statusCode
}

func (o *ListNeoforgesDefault) Error() string {
	return fmt.Sprintf("[GET /neoforge][%d] ListNeoforges default  %+v", o._statusCode, o.Payload)
}

func (o *ListNeoforgesDefault) String() string {
	return fmt.Sprintf("[GET /neoforge][%d] ListNeoforges default  %+v", o._statusCode, o.Payload)
}

func (o *ListNeoforgesDefault) GetPayload() *models.GeneralError {
	return o.Payload
}

func (o *ListNeoforgesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GeneralError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
