// Code generated by go-swagger; DO NOT EDIT.

package neoforge

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/kleister/kleister-go/models"
)

// SearchNeoforgesReader is a Reader for the SearchNeoforges structure.
type SearchNeoforgesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SearchNeoforgesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSearchNeoforgesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewSearchNeoforgesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewSearchNeoforgesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewSearchNeoforgesOK creates a SearchNeoforgesOK with default headers values
func NewSearchNeoforgesOK() *SearchNeoforgesOK {
	return &SearchNeoforgesOK{}
}

/*
SearchNeoforgesOK describes a response with status code 200, with default header values.

A collection of Neoforge versions
*/
type SearchNeoforgesOK struct {
	Payload *models.Neoforges
}

// IsSuccess returns true when this search neoforges o k response has a 2xx status code
func (o *SearchNeoforgesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this search neoforges o k response has a 3xx status code
func (o *SearchNeoforgesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search neoforges o k response has a 4xx status code
func (o *SearchNeoforgesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this search neoforges o k response has a 5xx status code
func (o *SearchNeoforgesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this search neoforges o k response a status code equal to that given
func (o *SearchNeoforgesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the search neoforges o k response
func (o *SearchNeoforgesOK) Code() int {
	return 200
}

func (o *SearchNeoforgesOK) Error() string {
	return fmt.Sprintf("[GET /neoforge/{neoforge_id}][%d] searchNeoforgesOK  %+v", 200, o.Payload)
}

func (o *SearchNeoforgesOK) String() string {
	return fmt.Sprintf("[GET /neoforge/{neoforge_id}][%d] searchNeoforgesOK  %+v", 200, o.Payload)
}

func (o *SearchNeoforgesOK) GetPayload() *models.Neoforges {
	return o.Payload
}

func (o *SearchNeoforgesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Neoforges)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchNeoforgesForbidden creates a SearchNeoforgesForbidden with default headers values
func NewSearchNeoforgesForbidden() *SearchNeoforgesForbidden {
	return &SearchNeoforgesForbidden{}
}

/*
SearchNeoforgesForbidden describes a response with status code 403, with default header values.

User is not authorized
*/
type SearchNeoforgesForbidden struct {
	Payload *models.GeneralError
}

// IsSuccess returns true when this search neoforges forbidden response has a 2xx status code
func (o *SearchNeoforgesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search neoforges forbidden response has a 3xx status code
func (o *SearchNeoforgesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search neoforges forbidden response has a 4xx status code
func (o *SearchNeoforgesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this search neoforges forbidden response has a 5xx status code
func (o *SearchNeoforgesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this search neoforges forbidden response a status code equal to that given
func (o *SearchNeoforgesForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the search neoforges forbidden response
func (o *SearchNeoforgesForbidden) Code() int {
	return 403
}

func (o *SearchNeoforgesForbidden) Error() string {
	return fmt.Sprintf("[GET /neoforge/{neoforge_id}][%d] searchNeoforgesForbidden  %+v", 403, o.Payload)
}

func (o *SearchNeoforgesForbidden) String() string {
	return fmt.Sprintf("[GET /neoforge/{neoforge_id}][%d] searchNeoforgesForbidden  %+v", 403, o.Payload)
}

func (o *SearchNeoforgesForbidden) GetPayload() *models.GeneralError {
	return o.Payload
}

func (o *SearchNeoforgesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GeneralError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchNeoforgesDefault creates a SearchNeoforgesDefault with default headers values
func NewSearchNeoforgesDefault(code int) *SearchNeoforgesDefault {
	return &SearchNeoforgesDefault{
		_statusCode: code,
	}
}

/*
SearchNeoforgesDefault describes a response with status code -1, with default header values.

Some error unrelated to the handler
*/
type SearchNeoforgesDefault struct {
	_statusCode int

	Payload *models.GeneralError
}

// IsSuccess returns true when this search neoforges default response has a 2xx status code
func (o *SearchNeoforgesDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this search neoforges default response has a 3xx status code
func (o *SearchNeoforgesDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this search neoforges default response has a 4xx status code
func (o *SearchNeoforgesDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this search neoforges default response has a 5xx status code
func (o *SearchNeoforgesDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this search neoforges default response a status code equal to that given
func (o *SearchNeoforgesDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the search neoforges default response
func (o *SearchNeoforgesDefault) Code() int {
	return o._statusCode
}

func (o *SearchNeoforgesDefault) Error() string {
	return fmt.Sprintf("[GET /neoforge/{neoforge_id}][%d] SearchNeoforges default  %+v", o._statusCode, o.Payload)
}

func (o *SearchNeoforgesDefault) String() string {
	return fmt.Sprintf("[GET /neoforge/{neoforge_id}][%d] SearchNeoforges default  %+v", o._statusCode, o.Payload)
}

func (o *SearchNeoforgesDefault) GetPayload() *models.GeneralError {
	return o.Payload
}

func (o *SearchNeoforgesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GeneralError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
