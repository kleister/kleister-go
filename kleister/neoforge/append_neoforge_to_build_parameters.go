// Code generated by go-swagger; DO NOT EDIT.

package neoforge

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/kleister/kleister-go/v1/models"
)

// NewAppendNeoforgeToBuildParams creates a new AppendNeoforgeToBuildParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewAppendNeoforgeToBuildParams() *AppendNeoforgeToBuildParams {
	return &AppendNeoforgeToBuildParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewAppendNeoforgeToBuildParamsWithTimeout creates a new AppendNeoforgeToBuildParams object
// with the ability to set a timeout on a request.
func NewAppendNeoforgeToBuildParamsWithTimeout(timeout time.Duration) *AppendNeoforgeToBuildParams {
	return &AppendNeoforgeToBuildParams{
		timeout: timeout,
	}
}

// NewAppendNeoforgeToBuildParamsWithContext creates a new AppendNeoforgeToBuildParams object
// with the ability to set a context for a request.
func NewAppendNeoforgeToBuildParamsWithContext(ctx context.Context) *AppendNeoforgeToBuildParams {
	return &AppendNeoforgeToBuildParams{
		Context: ctx,
	}
}

// NewAppendNeoforgeToBuildParamsWithHTTPClient creates a new AppendNeoforgeToBuildParams object
// with the ability to set a custom HTTPClient for a request.
func NewAppendNeoforgeToBuildParamsWithHTTPClient(client *http.Client) *AppendNeoforgeToBuildParams {
	return &AppendNeoforgeToBuildParams{
		HTTPClient: client,
	}
}

/*
AppendNeoforgeToBuildParams contains all the parameters to send to the API endpoint

	for the append neoforge to build operation.

	Typically these are written to a http.Request.
*/
type AppendNeoforgeToBuildParams struct {

	/* NeoforgeBuild.

	   The build data to append
	*/
	NeoforgeBuild *models.NeoforgeBuildParams

	/* NeoforgeID.

	   A neoforge UUID or slug
	*/
	NeoforgeID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the append neoforge to build params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *AppendNeoforgeToBuildParams) WithDefaults() *AppendNeoforgeToBuildParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the append neoforge to build params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *AppendNeoforgeToBuildParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the append neoforge to build params
func (o *AppendNeoforgeToBuildParams) WithTimeout(timeout time.Duration) *AppendNeoforgeToBuildParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the append neoforge to build params
func (o *AppendNeoforgeToBuildParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the append neoforge to build params
func (o *AppendNeoforgeToBuildParams) WithContext(ctx context.Context) *AppendNeoforgeToBuildParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the append neoforge to build params
func (o *AppendNeoforgeToBuildParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the append neoforge to build params
func (o *AppendNeoforgeToBuildParams) WithHTTPClient(client *http.Client) *AppendNeoforgeToBuildParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the append neoforge to build params
func (o *AppendNeoforgeToBuildParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithNeoforgeBuild adds the neoforgeBuild to the append neoforge to build params
func (o *AppendNeoforgeToBuildParams) WithNeoforgeBuild(neoforgeBuild *models.NeoforgeBuildParams) *AppendNeoforgeToBuildParams {
	o.SetNeoforgeBuild(neoforgeBuild)
	return o
}

// SetNeoforgeBuild adds the neoforgeBuild to the append neoforge to build params
func (o *AppendNeoforgeToBuildParams) SetNeoforgeBuild(neoforgeBuild *models.NeoforgeBuildParams) {
	o.NeoforgeBuild = neoforgeBuild
}

// WithNeoforgeID adds the neoforgeID to the append neoforge to build params
func (o *AppendNeoforgeToBuildParams) WithNeoforgeID(neoforgeID string) *AppendNeoforgeToBuildParams {
	o.SetNeoforgeID(neoforgeID)
	return o
}

// SetNeoforgeID adds the neoforgeId to the append neoforge to build params
func (o *AppendNeoforgeToBuildParams) SetNeoforgeID(neoforgeID string) {
	o.NeoforgeID = neoforgeID
}

// WriteToRequest writes these params to a swagger request
func (o *AppendNeoforgeToBuildParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.NeoforgeBuild != nil {
		if err := r.SetBodyParam(o.NeoforgeBuild); err != nil {
			return err
		}
	}

	// path param neoforge_id
	if err := r.SetPathParam("neoforge_id", o.NeoforgeID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
