// Code generated by go-swagger; DO NOT EDIT.

package profile

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/kleister/kleister-go/models"
)

// UpdateProfileReader is a Reader for the UpdateProfile structure.
type UpdateProfileReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateProfileReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateProfileOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewUpdateProfileForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewUpdateProfileUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewUpdateProfileDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewUpdateProfileOK creates a UpdateProfileOK with default headers values
func NewUpdateProfileOK() *UpdateProfileOK {
	return &UpdateProfileOK{}
}

/*
UpdateProfileOK describes a response with status code 200, with default header values.

The updated profile data
*/
type UpdateProfileOK struct {
	Payload *models.Profile
}

// IsSuccess returns true when this update profile o k response has a 2xx status code
func (o *UpdateProfileOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update profile o k response has a 3xx status code
func (o *UpdateProfileOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update profile o k response has a 4xx status code
func (o *UpdateProfileOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update profile o k response has a 5xx status code
func (o *UpdateProfileOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update profile o k response a status code equal to that given
func (o *UpdateProfileOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update profile o k response
func (o *UpdateProfileOK) Code() int {
	return 200
}

func (o *UpdateProfileOK) Error() string {
	return fmt.Sprintf("[PUT /profile/self][%d] updateProfileOK  %+v", 200, o.Payload)
}

func (o *UpdateProfileOK) String() string {
	return fmt.Sprintf("[PUT /profile/self][%d] updateProfileOK  %+v", 200, o.Payload)
}

func (o *UpdateProfileOK) GetPayload() *models.Profile {
	return o.Payload
}

func (o *UpdateProfileOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Profile)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateProfileForbidden creates a UpdateProfileForbidden with default headers values
func NewUpdateProfileForbidden() *UpdateProfileForbidden {
	return &UpdateProfileForbidden{}
}

/*
UpdateProfileForbidden describes a response with status code 403, with default header values.

User is not authorized
*/
type UpdateProfileForbidden struct {
	Payload *models.GeneralError
}

// IsSuccess returns true when this update profile forbidden response has a 2xx status code
func (o *UpdateProfileForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update profile forbidden response has a 3xx status code
func (o *UpdateProfileForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update profile forbidden response has a 4xx status code
func (o *UpdateProfileForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update profile forbidden response has a 5xx status code
func (o *UpdateProfileForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update profile forbidden response a status code equal to that given
func (o *UpdateProfileForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update profile forbidden response
func (o *UpdateProfileForbidden) Code() int {
	return 403
}

func (o *UpdateProfileForbidden) Error() string {
	return fmt.Sprintf("[PUT /profile/self][%d] updateProfileForbidden  %+v", 403, o.Payload)
}

func (o *UpdateProfileForbidden) String() string {
	return fmt.Sprintf("[PUT /profile/self][%d] updateProfileForbidden  %+v", 403, o.Payload)
}

func (o *UpdateProfileForbidden) GetPayload() *models.GeneralError {
	return o.Payload
}

func (o *UpdateProfileForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GeneralError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateProfileUnprocessableEntity creates a UpdateProfileUnprocessableEntity with default headers values
func NewUpdateProfileUnprocessableEntity() *UpdateProfileUnprocessableEntity {
	return &UpdateProfileUnprocessableEntity{}
}

/*
UpdateProfileUnprocessableEntity describes a response with status code 422, with default header values.

Failed to validate request
*/
type UpdateProfileUnprocessableEntity struct {
	Payload *models.ValidationError
}

// IsSuccess returns true when this update profile unprocessable entity response has a 2xx status code
func (o *UpdateProfileUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update profile unprocessable entity response has a 3xx status code
func (o *UpdateProfileUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update profile unprocessable entity response has a 4xx status code
func (o *UpdateProfileUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this update profile unprocessable entity response has a 5xx status code
func (o *UpdateProfileUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this update profile unprocessable entity response a status code equal to that given
func (o *UpdateProfileUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the update profile unprocessable entity response
func (o *UpdateProfileUnprocessableEntity) Code() int {
	return 422
}

func (o *UpdateProfileUnprocessableEntity) Error() string {
	return fmt.Sprintf("[PUT /profile/self][%d] updateProfileUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *UpdateProfileUnprocessableEntity) String() string {
	return fmt.Sprintf("[PUT /profile/self][%d] updateProfileUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *UpdateProfileUnprocessableEntity) GetPayload() *models.ValidationError {
	return o.Payload
}

func (o *UpdateProfileUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateProfileDefault creates a UpdateProfileDefault with default headers values
func NewUpdateProfileDefault(code int) *UpdateProfileDefault {
	return &UpdateProfileDefault{
		_statusCode: code,
	}
}

/*
UpdateProfileDefault describes a response with status code -1, with default header values.

Some error unrelated to the handler
*/
type UpdateProfileDefault struct {
	_statusCode int

	Payload *models.GeneralError
}

// IsSuccess returns true when this update profile default response has a 2xx status code
func (o *UpdateProfileDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this update profile default response has a 3xx status code
func (o *UpdateProfileDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this update profile default response has a 4xx status code
func (o *UpdateProfileDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this update profile default response has a 5xx status code
func (o *UpdateProfileDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this update profile default response a status code equal to that given
func (o *UpdateProfileDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the update profile default response
func (o *UpdateProfileDefault) Code() int {
	return o._statusCode
}

func (o *UpdateProfileDefault) Error() string {
	return fmt.Sprintf("[PUT /profile/self][%d] UpdateProfile default  %+v", o._statusCode, o.Payload)
}

func (o *UpdateProfileDefault) String() string {
	return fmt.Sprintf("[PUT /profile/self][%d] UpdateProfile default  %+v", o._statusCode, o.Payload)
}

func (o *UpdateProfileDefault) GetPayload() *models.GeneralError {
	return o.Payload
}

func (o *UpdateProfileDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GeneralError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
