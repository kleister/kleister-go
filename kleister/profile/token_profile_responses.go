// Code generated by go-swagger; DO NOT EDIT.

package profile

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/kleister/kleister-go/v1/models"
)

// TokenProfileReader is a Reader for the TokenProfile structure.
type TokenProfileReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *TokenProfileReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewTokenProfileOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewTokenProfileForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewTokenProfileInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewTokenProfileDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewTokenProfileOK creates a TokenProfileOK with default headers values
func NewTokenProfileOK() *TokenProfileOK {
	return &TokenProfileOK{}
}

/*
TokenProfileOK describes a response with status code 200, with default header values.

The unlimited auth token
*/
type TokenProfileOK struct {
	Payload *models.AuthToken
}

// IsSuccess returns true when this token profile o k response has a 2xx status code
func (o *TokenProfileOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this token profile o k response has a 3xx status code
func (o *TokenProfileOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this token profile o k response has a 4xx status code
func (o *TokenProfileOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this token profile o k response has a 5xx status code
func (o *TokenProfileOK) IsServerError() bool {
	return false
}

// IsCode returns true when this token profile o k response a status code equal to that given
func (o *TokenProfileOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the token profile o k response
func (o *TokenProfileOK) Code() int {
	return 200
}

func (o *TokenProfileOK) Error() string {
	return fmt.Sprintf("[GET /profile/token][%d] tokenProfileOK  %+v", 200, o.Payload)
}

func (o *TokenProfileOK) String() string {
	return fmt.Sprintf("[GET /profile/token][%d] tokenProfileOK  %+v", 200, o.Payload)
}

func (o *TokenProfileOK) GetPayload() *models.AuthToken {
	return o.Payload
}

func (o *TokenProfileOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AuthToken)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTokenProfileForbidden creates a TokenProfileForbidden with default headers values
func NewTokenProfileForbidden() *TokenProfileForbidden {
	return &TokenProfileForbidden{}
}

/*
TokenProfileForbidden describes a response with status code 403, with default header values.

User is not authorized
*/
type TokenProfileForbidden struct {
	Payload *models.GeneralError
}

// IsSuccess returns true when this token profile forbidden response has a 2xx status code
func (o *TokenProfileForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this token profile forbidden response has a 3xx status code
func (o *TokenProfileForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this token profile forbidden response has a 4xx status code
func (o *TokenProfileForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this token profile forbidden response has a 5xx status code
func (o *TokenProfileForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this token profile forbidden response a status code equal to that given
func (o *TokenProfileForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the token profile forbidden response
func (o *TokenProfileForbidden) Code() int {
	return 403
}

func (o *TokenProfileForbidden) Error() string {
	return fmt.Sprintf("[GET /profile/token][%d] tokenProfileForbidden  %+v", 403, o.Payload)
}

func (o *TokenProfileForbidden) String() string {
	return fmt.Sprintf("[GET /profile/token][%d] tokenProfileForbidden  %+v", 403, o.Payload)
}

func (o *TokenProfileForbidden) GetPayload() *models.GeneralError {
	return o.Payload
}

func (o *TokenProfileForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GeneralError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTokenProfileInternalServerError creates a TokenProfileInternalServerError with default headers values
func NewTokenProfileInternalServerError() *TokenProfileInternalServerError {
	return &TokenProfileInternalServerError{}
}

/*
TokenProfileInternalServerError describes a response with status code 500, with default header values.

Failed to generate a token
*/
type TokenProfileInternalServerError struct {
	Payload *models.GeneralError
}

// IsSuccess returns true when this token profile internal server error response has a 2xx status code
func (o *TokenProfileInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this token profile internal server error response has a 3xx status code
func (o *TokenProfileInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this token profile internal server error response has a 4xx status code
func (o *TokenProfileInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this token profile internal server error response has a 5xx status code
func (o *TokenProfileInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this token profile internal server error response a status code equal to that given
func (o *TokenProfileInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the token profile internal server error response
func (o *TokenProfileInternalServerError) Code() int {
	return 500
}

func (o *TokenProfileInternalServerError) Error() string {
	return fmt.Sprintf("[GET /profile/token][%d] tokenProfileInternalServerError  %+v", 500, o.Payload)
}

func (o *TokenProfileInternalServerError) String() string {
	return fmt.Sprintf("[GET /profile/token][%d] tokenProfileInternalServerError  %+v", 500, o.Payload)
}

func (o *TokenProfileInternalServerError) GetPayload() *models.GeneralError {
	return o.Payload
}

func (o *TokenProfileInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GeneralError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTokenProfileDefault creates a TokenProfileDefault with default headers values
func NewTokenProfileDefault(code int) *TokenProfileDefault {
	return &TokenProfileDefault{
		_statusCode: code,
	}
}

/*
TokenProfileDefault describes a response with status code -1, with default header values.

Some error unrelated to the handler
*/
type TokenProfileDefault struct {
	_statusCode int

	Payload *models.GeneralError
}

// IsSuccess returns true when this token profile default response has a 2xx status code
func (o *TokenProfileDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this token profile default response has a 3xx status code
func (o *TokenProfileDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this token profile default response has a 4xx status code
func (o *TokenProfileDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this token profile default response has a 5xx status code
func (o *TokenProfileDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this token profile default response a status code equal to that given
func (o *TokenProfileDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the token profile default response
func (o *TokenProfileDefault) Code() int {
	return o._statusCode
}

func (o *TokenProfileDefault) Error() string {
	return fmt.Sprintf("[GET /profile/token][%d] TokenProfile default  %+v", o._statusCode, o.Payload)
}

func (o *TokenProfileDefault) String() string {
	return fmt.Sprintf("[GET /profile/token][%d] TokenProfile default  %+v", o._statusCode, o.Payload)
}

func (o *TokenProfileDefault) GetPayload() *models.GeneralError {
	return o.Payload
}

func (o *TokenProfileDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GeneralError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
