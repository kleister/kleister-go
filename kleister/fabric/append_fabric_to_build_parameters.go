// Code generated by go-swagger; DO NOT EDIT.

package fabric

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/kleister/kleister-go/models"
)

// NewAppendFabricToBuildParams creates a new AppendFabricToBuildParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewAppendFabricToBuildParams() *AppendFabricToBuildParams {
	return &AppendFabricToBuildParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewAppendFabricToBuildParamsWithTimeout creates a new AppendFabricToBuildParams object
// with the ability to set a timeout on a request.
func NewAppendFabricToBuildParamsWithTimeout(timeout time.Duration) *AppendFabricToBuildParams {
	return &AppendFabricToBuildParams{
		timeout: timeout,
	}
}

// NewAppendFabricToBuildParamsWithContext creates a new AppendFabricToBuildParams object
// with the ability to set a context for a request.
func NewAppendFabricToBuildParamsWithContext(ctx context.Context) *AppendFabricToBuildParams {
	return &AppendFabricToBuildParams{
		Context: ctx,
	}
}

// NewAppendFabricToBuildParamsWithHTTPClient creates a new AppendFabricToBuildParams object
// with the ability to set a custom HTTPClient for a request.
func NewAppendFabricToBuildParamsWithHTTPClient(client *http.Client) *AppendFabricToBuildParams {
	return &AppendFabricToBuildParams{
		HTTPClient: client,
	}
}

/*
AppendFabricToBuildParams contains all the parameters to send to the API endpoint

	for the append fabric to build operation.

	Typically these are written to a http.Request.
*/
type AppendFabricToBuildParams struct {

	/* FabricBuild.

	   The build data to append
	*/
	FabricBuild *models.FabricBuildParams

	/* FabricID.

	   A fabric UUID or slug
	*/
	FabricID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the append fabric to build params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *AppendFabricToBuildParams) WithDefaults() *AppendFabricToBuildParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the append fabric to build params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *AppendFabricToBuildParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the append fabric to build params
func (o *AppendFabricToBuildParams) WithTimeout(timeout time.Duration) *AppendFabricToBuildParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the append fabric to build params
func (o *AppendFabricToBuildParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the append fabric to build params
func (o *AppendFabricToBuildParams) WithContext(ctx context.Context) *AppendFabricToBuildParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the append fabric to build params
func (o *AppendFabricToBuildParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the append fabric to build params
func (o *AppendFabricToBuildParams) WithHTTPClient(client *http.Client) *AppendFabricToBuildParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the append fabric to build params
func (o *AppendFabricToBuildParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithFabricBuild adds the fabricBuild to the append fabric to build params
func (o *AppendFabricToBuildParams) WithFabricBuild(fabricBuild *models.FabricBuildParams) *AppendFabricToBuildParams {
	o.SetFabricBuild(fabricBuild)
	return o
}

// SetFabricBuild adds the fabricBuild to the append fabric to build params
func (o *AppendFabricToBuildParams) SetFabricBuild(fabricBuild *models.FabricBuildParams) {
	o.FabricBuild = fabricBuild
}

// WithFabricID adds the fabricID to the append fabric to build params
func (o *AppendFabricToBuildParams) WithFabricID(fabricID string) *AppendFabricToBuildParams {
	o.SetFabricID(fabricID)
	return o
}

// SetFabricID adds the fabricId to the append fabric to build params
func (o *AppendFabricToBuildParams) SetFabricID(fabricID string) {
	o.FabricID = fabricID
}

// WriteToRequest writes these params to a swagger request
func (o *AppendFabricToBuildParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.FabricBuild != nil {
		if err := r.SetBodyParam(o.FabricBuild); err != nil {
			return err
		}
	}

	// path param fabric_id
	if err := r.SetPathParam("fabric_id", o.FabricID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
