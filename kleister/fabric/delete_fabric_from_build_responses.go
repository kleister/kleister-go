// Code generated by go-swagger; DO NOT EDIT.

package fabric

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/kleister/kleister-go/v1/models"
)

// DeleteFabricFromBuildReader is a Reader for the DeleteFabricFromBuild structure.
type DeleteFabricFromBuildReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteFabricFromBuildReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteFabricFromBuildOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewDeleteFabricFromBuildForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteFabricFromBuildNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 406:
		result := NewDeleteFabricFromBuildNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 412:
		result := NewDeleteFabricFromBuildPreconditionFailed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewDeleteFabricFromBuildDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteFabricFromBuildOK creates a DeleteFabricFromBuildOK with default headers values
func NewDeleteFabricFromBuildOK() *DeleteFabricFromBuildOK {
	return &DeleteFabricFromBuildOK{}
}

/*
DeleteFabricFromBuildOK describes a response with status code 200, with default header values.

Plain success message
*/
type DeleteFabricFromBuildOK struct {
	Payload *models.GeneralError
}

// IsSuccess returns true when this delete fabric from build o k response has a 2xx status code
func (o *DeleteFabricFromBuildOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete fabric from build o k response has a 3xx status code
func (o *DeleteFabricFromBuildOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete fabric from build o k response has a 4xx status code
func (o *DeleteFabricFromBuildOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete fabric from build o k response has a 5xx status code
func (o *DeleteFabricFromBuildOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete fabric from build o k response a status code equal to that given
func (o *DeleteFabricFromBuildOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete fabric from build o k response
func (o *DeleteFabricFromBuildOK) Code() int {
	return 200
}

func (o *DeleteFabricFromBuildOK) Error() string {
	return fmt.Sprintf("[DELETE /fabric/{fabric_id}/builds][%d] deleteFabricFromBuildOK  %+v", 200, o.Payload)
}

func (o *DeleteFabricFromBuildOK) String() string {
	return fmt.Sprintf("[DELETE /fabric/{fabric_id}/builds][%d] deleteFabricFromBuildOK  %+v", 200, o.Payload)
}

func (o *DeleteFabricFromBuildOK) GetPayload() *models.GeneralError {
	return o.Payload
}

func (o *DeleteFabricFromBuildOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GeneralError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteFabricFromBuildForbidden creates a DeleteFabricFromBuildForbidden with default headers values
func NewDeleteFabricFromBuildForbidden() *DeleteFabricFromBuildForbidden {
	return &DeleteFabricFromBuildForbidden{}
}

/*
DeleteFabricFromBuildForbidden describes a response with status code 403, with default header values.

User is not authorized
*/
type DeleteFabricFromBuildForbidden struct {
	Payload *models.GeneralError
}

// IsSuccess returns true when this delete fabric from build forbidden response has a 2xx status code
func (o *DeleteFabricFromBuildForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete fabric from build forbidden response has a 3xx status code
func (o *DeleteFabricFromBuildForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete fabric from build forbidden response has a 4xx status code
func (o *DeleteFabricFromBuildForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete fabric from build forbidden response has a 5xx status code
func (o *DeleteFabricFromBuildForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete fabric from build forbidden response a status code equal to that given
func (o *DeleteFabricFromBuildForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the delete fabric from build forbidden response
func (o *DeleteFabricFromBuildForbidden) Code() int {
	return 403
}

func (o *DeleteFabricFromBuildForbidden) Error() string {
	return fmt.Sprintf("[DELETE /fabric/{fabric_id}/builds][%d] deleteFabricFromBuildForbidden  %+v", 403, o.Payload)
}

func (o *DeleteFabricFromBuildForbidden) String() string {
	return fmt.Sprintf("[DELETE /fabric/{fabric_id}/builds][%d] deleteFabricFromBuildForbidden  %+v", 403, o.Payload)
}

func (o *DeleteFabricFromBuildForbidden) GetPayload() *models.GeneralError {
	return o.Payload
}

func (o *DeleteFabricFromBuildForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GeneralError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteFabricFromBuildNotFound creates a DeleteFabricFromBuildNotFound with default headers values
func NewDeleteFabricFromBuildNotFound() *DeleteFabricFromBuildNotFound {
	return &DeleteFabricFromBuildNotFound{}
}

/*
DeleteFabricFromBuildNotFound describes a response with status code 404, with default header values.

Fabric or build not found
*/
type DeleteFabricFromBuildNotFound struct {
	Payload *models.GeneralError
}

// IsSuccess returns true when this delete fabric from build not found response has a 2xx status code
func (o *DeleteFabricFromBuildNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete fabric from build not found response has a 3xx status code
func (o *DeleteFabricFromBuildNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete fabric from build not found response has a 4xx status code
func (o *DeleteFabricFromBuildNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete fabric from build not found response has a 5xx status code
func (o *DeleteFabricFromBuildNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete fabric from build not found response a status code equal to that given
func (o *DeleteFabricFromBuildNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete fabric from build not found response
func (o *DeleteFabricFromBuildNotFound) Code() int {
	return 404
}

func (o *DeleteFabricFromBuildNotFound) Error() string {
	return fmt.Sprintf("[DELETE /fabric/{fabric_id}/builds][%d] deleteFabricFromBuildNotFound  %+v", 404, o.Payload)
}

func (o *DeleteFabricFromBuildNotFound) String() string {
	return fmt.Sprintf("[DELETE /fabric/{fabric_id}/builds][%d] deleteFabricFromBuildNotFound  %+v", 404, o.Payload)
}

func (o *DeleteFabricFromBuildNotFound) GetPayload() *models.GeneralError {
	return o.Payload
}

func (o *DeleteFabricFromBuildNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GeneralError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteFabricFromBuildNotAcceptable creates a DeleteFabricFromBuildNotAcceptable with default headers values
func NewDeleteFabricFromBuildNotAcceptable() *DeleteFabricFromBuildNotAcceptable {
	return &DeleteFabricFromBuildNotAcceptable{}
}

/*
DeleteFabricFromBuildNotAcceptable describes a response with status code 406, with default header values.

Failed to update build
*/
type DeleteFabricFromBuildNotAcceptable struct {
	Payload *models.GeneralError
}

// IsSuccess returns true when this delete fabric from build not acceptable response has a 2xx status code
func (o *DeleteFabricFromBuildNotAcceptable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete fabric from build not acceptable response has a 3xx status code
func (o *DeleteFabricFromBuildNotAcceptable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete fabric from build not acceptable response has a 4xx status code
func (o *DeleteFabricFromBuildNotAcceptable) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete fabric from build not acceptable response has a 5xx status code
func (o *DeleteFabricFromBuildNotAcceptable) IsServerError() bool {
	return false
}

// IsCode returns true when this delete fabric from build not acceptable response a status code equal to that given
func (o *DeleteFabricFromBuildNotAcceptable) IsCode(code int) bool {
	return code == 406
}

// Code gets the status code for the delete fabric from build not acceptable response
func (o *DeleteFabricFromBuildNotAcceptable) Code() int {
	return 406
}

func (o *DeleteFabricFromBuildNotAcceptable) Error() string {
	return fmt.Sprintf("[DELETE /fabric/{fabric_id}/builds][%d] deleteFabricFromBuildNotAcceptable  %+v", 406, o.Payload)
}

func (o *DeleteFabricFromBuildNotAcceptable) String() string {
	return fmt.Sprintf("[DELETE /fabric/{fabric_id}/builds][%d] deleteFabricFromBuildNotAcceptable  %+v", 406, o.Payload)
}

func (o *DeleteFabricFromBuildNotAcceptable) GetPayload() *models.GeneralError {
	return o.Payload
}

func (o *DeleteFabricFromBuildNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GeneralError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteFabricFromBuildPreconditionFailed creates a DeleteFabricFromBuildPreconditionFailed with default headers values
func NewDeleteFabricFromBuildPreconditionFailed() *DeleteFabricFromBuildPreconditionFailed {
	return &DeleteFabricFromBuildPreconditionFailed{}
}

/*
DeleteFabricFromBuildPreconditionFailed describes a response with status code 412, with default header values.

Build is not assigned
*/
type DeleteFabricFromBuildPreconditionFailed struct {
	Payload *models.GeneralError
}

// IsSuccess returns true when this delete fabric from build precondition failed response has a 2xx status code
func (o *DeleteFabricFromBuildPreconditionFailed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete fabric from build precondition failed response has a 3xx status code
func (o *DeleteFabricFromBuildPreconditionFailed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete fabric from build precondition failed response has a 4xx status code
func (o *DeleteFabricFromBuildPreconditionFailed) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete fabric from build precondition failed response has a 5xx status code
func (o *DeleteFabricFromBuildPreconditionFailed) IsServerError() bool {
	return false
}

// IsCode returns true when this delete fabric from build precondition failed response a status code equal to that given
func (o *DeleteFabricFromBuildPreconditionFailed) IsCode(code int) bool {
	return code == 412
}

// Code gets the status code for the delete fabric from build precondition failed response
func (o *DeleteFabricFromBuildPreconditionFailed) Code() int {
	return 412
}

func (o *DeleteFabricFromBuildPreconditionFailed) Error() string {
	return fmt.Sprintf("[DELETE /fabric/{fabric_id}/builds][%d] deleteFabricFromBuildPreconditionFailed  %+v", 412, o.Payload)
}

func (o *DeleteFabricFromBuildPreconditionFailed) String() string {
	return fmt.Sprintf("[DELETE /fabric/{fabric_id}/builds][%d] deleteFabricFromBuildPreconditionFailed  %+v", 412, o.Payload)
}

func (o *DeleteFabricFromBuildPreconditionFailed) GetPayload() *models.GeneralError {
	return o.Payload
}

func (o *DeleteFabricFromBuildPreconditionFailed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GeneralError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteFabricFromBuildDefault creates a DeleteFabricFromBuildDefault with default headers values
func NewDeleteFabricFromBuildDefault(code int) *DeleteFabricFromBuildDefault {
	return &DeleteFabricFromBuildDefault{
		_statusCode: code,
	}
}

/*
DeleteFabricFromBuildDefault describes a response with status code -1, with default header values.

Some error unrelated to the handler
*/
type DeleteFabricFromBuildDefault struct {
	_statusCode int

	Payload *models.GeneralError
}

// IsSuccess returns true when this delete fabric from build default response has a 2xx status code
func (o *DeleteFabricFromBuildDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this delete fabric from build default response has a 3xx status code
func (o *DeleteFabricFromBuildDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this delete fabric from build default response has a 4xx status code
func (o *DeleteFabricFromBuildDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this delete fabric from build default response has a 5xx status code
func (o *DeleteFabricFromBuildDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this delete fabric from build default response a status code equal to that given
func (o *DeleteFabricFromBuildDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the delete fabric from build default response
func (o *DeleteFabricFromBuildDefault) Code() int {
	return o._statusCode
}

func (o *DeleteFabricFromBuildDefault) Error() string {
	return fmt.Sprintf("[DELETE /fabric/{fabric_id}/builds][%d] DeleteFabricFromBuild default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteFabricFromBuildDefault) String() string {
	return fmt.Sprintf("[DELETE /fabric/{fabric_id}/builds][%d] DeleteFabricFromBuild default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteFabricFromBuildDefault) GetPayload() *models.GeneralError {
	return o.Payload
}

func (o *DeleteFabricFromBuildDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GeneralError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
