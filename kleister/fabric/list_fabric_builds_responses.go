// Code generated by go-swagger; DO NOT EDIT.

package fabric

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/kleister/kleister-go/v1/models"
)

// ListFabricBuildsReader is a Reader for the ListFabricBuilds structure.
type ListFabricBuildsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListFabricBuildsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListFabricBuildsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewListFabricBuildsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListFabricBuildsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewListFabricBuildsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListFabricBuildsOK creates a ListFabricBuildsOK with default headers values
func NewListFabricBuildsOK() *ListFabricBuildsOK {
	return &ListFabricBuildsOK{}
}

/*
ListFabricBuildsOK describes a response with status code 200, with default header values.

A collection of assigned builds
*/
type ListFabricBuildsOK struct {
	Payload *models.FabricBuilds
}

// IsSuccess returns true when this list fabric builds o k response has a 2xx status code
func (o *ListFabricBuildsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list fabric builds o k response has a 3xx status code
func (o *ListFabricBuildsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list fabric builds o k response has a 4xx status code
func (o *ListFabricBuildsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list fabric builds o k response has a 5xx status code
func (o *ListFabricBuildsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list fabric builds o k response a status code equal to that given
func (o *ListFabricBuildsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list fabric builds o k response
func (o *ListFabricBuildsOK) Code() int {
	return 200
}

func (o *ListFabricBuildsOK) Error() string {
	return fmt.Sprintf("[GET /fabric/{fabric_id}/builds][%d] listFabricBuildsOK  %+v", 200, o.Payload)
}

func (o *ListFabricBuildsOK) String() string {
	return fmt.Sprintf("[GET /fabric/{fabric_id}/builds][%d] listFabricBuildsOK  %+v", 200, o.Payload)
}

func (o *ListFabricBuildsOK) GetPayload() *models.FabricBuilds {
	return o.Payload
}

func (o *ListFabricBuildsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FabricBuilds)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListFabricBuildsForbidden creates a ListFabricBuildsForbidden with default headers values
func NewListFabricBuildsForbidden() *ListFabricBuildsForbidden {
	return &ListFabricBuildsForbidden{}
}

/*
ListFabricBuildsForbidden describes a response with status code 403, with default header values.

User is not authorized
*/
type ListFabricBuildsForbidden struct {
	Payload *models.GeneralError
}

// IsSuccess returns true when this list fabric builds forbidden response has a 2xx status code
func (o *ListFabricBuildsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list fabric builds forbidden response has a 3xx status code
func (o *ListFabricBuildsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list fabric builds forbidden response has a 4xx status code
func (o *ListFabricBuildsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list fabric builds forbidden response has a 5xx status code
func (o *ListFabricBuildsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list fabric builds forbidden response a status code equal to that given
func (o *ListFabricBuildsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the list fabric builds forbidden response
func (o *ListFabricBuildsForbidden) Code() int {
	return 403
}

func (o *ListFabricBuildsForbidden) Error() string {
	return fmt.Sprintf("[GET /fabric/{fabric_id}/builds][%d] listFabricBuildsForbidden  %+v", 403, o.Payload)
}

func (o *ListFabricBuildsForbidden) String() string {
	return fmt.Sprintf("[GET /fabric/{fabric_id}/builds][%d] listFabricBuildsForbidden  %+v", 403, o.Payload)
}

func (o *ListFabricBuildsForbidden) GetPayload() *models.GeneralError {
	return o.Payload
}

func (o *ListFabricBuildsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GeneralError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListFabricBuildsNotFound creates a ListFabricBuildsNotFound with default headers values
func NewListFabricBuildsNotFound() *ListFabricBuildsNotFound {
	return &ListFabricBuildsNotFound{}
}

/*
ListFabricBuildsNotFound describes a response with status code 404, with default header values.

Fabric or build not found
*/
type ListFabricBuildsNotFound struct {
	Payload *models.GeneralError
}

// IsSuccess returns true when this list fabric builds not found response has a 2xx status code
func (o *ListFabricBuildsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list fabric builds not found response has a 3xx status code
func (o *ListFabricBuildsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list fabric builds not found response has a 4xx status code
func (o *ListFabricBuildsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this list fabric builds not found response has a 5xx status code
func (o *ListFabricBuildsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this list fabric builds not found response a status code equal to that given
func (o *ListFabricBuildsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the list fabric builds not found response
func (o *ListFabricBuildsNotFound) Code() int {
	return 404
}

func (o *ListFabricBuildsNotFound) Error() string {
	return fmt.Sprintf("[GET /fabric/{fabric_id}/builds][%d] listFabricBuildsNotFound  %+v", 404, o.Payload)
}

func (o *ListFabricBuildsNotFound) String() string {
	return fmt.Sprintf("[GET /fabric/{fabric_id}/builds][%d] listFabricBuildsNotFound  %+v", 404, o.Payload)
}

func (o *ListFabricBuildsNotFound) GetPayload() *models.GeneralError {
	return o.Payload
}

func (o *ListFabricBuildsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GeneralError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListFabricBuildsDefault creates a ListFabricBuildsDefault with default headers values
func NewListFabricBuildsDefault(code int) *ListFabricBuildsDefault {
	return &ListFabricBuildsDefault{
		_statusCode: code,
	}
}

/*
ListFabricBuildsDefault describes a response with status code -1, with default header values.

Some error unrelated to the handler
*/
type ListFabricBuildsDefault struct {
	_statusCode int

	Payload *models.GeneralError
}

// IsSuccess returns true when this list fabric builds default response has a 2xx status code
func (o *ListFabricBuildsDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this list fabric builds default response has a 3xx status code
func (o *ListFabricBuildsDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this list fabric builds default response has a 4xx status code
func (o *ListFabricBuildsDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this list fabric builds default response has a 5xx status code
func (o *ListFabricBuildsDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this list fabric builds default response a status code equal to that given
func (o *ListFabricBuildsDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the list fabric builds default response
func (o *ListFabricBuildsDefault) Code() int {
	return o._statusCode
}

func (o *ListFabricBuildsDefault) Error() string {
	return fmt.Sprintf("[GET /fabric/{fabric_id}/builds][%d] ListFabricBuilds default  %+v", o._statusCode, o.Payload)
}

func (o *ListFabricBuildsDefault) String() string {
	return fmt.Sprintf("[GET /fabric/{fabric_id}/builds][%d] ListFabricBuilds default  %+v", o._statusCode, o.Payload)
}

func (o *ListFabricBuildsDefault) GetPayload() *models.GeneralError {
	return o.Payload
}

func (o *ListFabricBuildsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GeneralError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
