// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// UserModParams user mod params
// swagger:model user_mod_params
type UserModParams struct {

	// mod
	// Required: true
	Mod *string `json:"mod"`

	// perm
	// Required: true
	Perm *string `json:"perm"`

	// user
	// Required: true
	User *string `json:"user"`
}

// Validate validates this user mod params
func (m *UserModParams) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateMod(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePerm(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUser(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *UserModParams) validateMod(formats strfmt.Registry) error {

	if err := validate.Required("mod", "body", m.Mod); err != nil {
		return err
	}

	return nil
}

func (m *UserModParams) validatePerm(formats strfmt.Registry) error {

	if err := validate.Required("perm", "body", m.Perm); err != nil {
		return err
	}

	return nil
}

func (m *UserModParams) validateUser(formats strfmt.Registry) error {

	if err := validate.Required("user", "body", m.User); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *UserModParams) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *UserModParams) UnmarshalBinary(b []byte) error {
	var res UserModParams
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
